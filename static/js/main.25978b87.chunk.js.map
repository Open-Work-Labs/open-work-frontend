{"version":3,"sources":["store/Store/StoreContext.js","pages/Create/styles.module.css","pages/Challenge/Uploader/index.tsx","pages/Create/Uploader/index.tsx","ColorModeSwitcher.tsx","organsims/Footer/index.tsx","atoms/BorderedAccordion/index.tsx","molecules/AccordionDataDisplay/index.tsx","pages/Challenge/Accordions/Description.tsx","pages/Challenge/ImageExamples/index.tsx","pages/Challenge/Accordions/ExampleImages.tsx","atoms/BorderedBox/index.tsx","atoms/ClaimButton/index.tsx","atoms/ConnectWalletButton/index.jsx","molecules/TimeLeft/index.tsx","pages/Challenge/NFTViewer.tsx/index.tsx","pages/Challenge/TopFolder/index.tsx","organsims/DisplaySubmissions/Card.tsx","organsims/DisplaySubmissions/index.tsx","pages/Challenge/index.tsx","assets/images/much_wow.jpeg","pages/Home/index.tsx","pages/NotFound/index.tsx","pages/Create/index.tsx","pages/SelectWinner/index.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx","services/firebase.js","hooks/useFirebase.js"],"names":["StoreContext","React","createContext","module","exports","client","create","url","Layout","input","previews","submitButton","dropzoneProps","files","maxFiles","extra","length","InputContent","spacing","textAlign","sx","useStyleConfig","variant","fontSize","Uploader","bountyId","refreshData","setLoading","db","useDb","useContext","appState","useState","setFile","urlArr","setUrlArr","readFileAsync","file","Promise","resolve","reject","reader","window","FileReader","readAsArrayBuffer","onloadend","console","log","Buffer","result","onerror","handleSubmit","allFiles","a","makeSubmission","txnResponse","txnReceipt","events","data","tmpArr","i","f","arrayBuffer","add","created","path","prev","src","push","remove","submissionsRef","doc","setDoc","id","date","Date","postedBy","from","error","bdrClr","useColorMode","colorMode","getUploadParams","LayoutComponent","onSubmit","classNames","inputLabelWithFiles","defaultClassNames","inputLabel","styles","dropzone","borderColor","width","position","padding","inputContent","handleChangeStatus","onChangeStatus","maxSizeBytes","SubmitButtonComponent","ColorModeSwitcher","props","toggleColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","color","marginLeft","onClick","icon","Footer","mt","p","href","isExternal","textDecoration","BorderedAccordion","rest","BorderedAccordionItem","borderBottom","borderTop","AccordionDataDisplay","title","children","defaultIndex","allowMultiple","flex","fontFamily","pb","Description","description","getThumbBoundsFn","index","thumbnail","document","querySelectorAll","pageYScroll","pageYOffset","documentElement","scrollTop","rect","getBoundingClientRect","x","left","y","top","w","ImageExamples","imgs","options","bgOpacity","mb","overflow","map","item","original","image","imgWidth","height","imgHeight","ref","open","className","alt","ExampleImages","BorderedBox","ClaimButton","isClaiming","setIsClaiming","claim","claimBounty","colorScheme","isLoading","disabled","provider","location","host","origin","ethers","providers","Web3Provider","ethereum","ConnectWalletButton","getSigner","setIsConnecting","setIsConnectingError","setIsConnectingErrorMessage","setIsConnectingErrorCode","setIsConnectingErrorData","connectWallet","send","catch","message","code","twoDigits","n","Block","value","label","alignItems","fontWeight","TimeLeft","renderer","days","hours","minutes","seconds","base","md","lg","xl","NFTViewer","startDate","endDate","prizeAmount","bg","toUTCString","TopFold","isWinnerSelected","display","ml","align","as","toLocaleString","month","day","year","hour","minute","timeZone","getTime","borderBottomRadius","Card","imageAlt","maxW","borderWidth","borderRadius","letterSpacing","ReactTimeAgo","locale","lineHeight","isTruncated","DisplaySubmissions","useParams","fireData","setFireData","loading","getData","docRef","getDocs","collection","querySnapshot","tmp","forEach","useEffect","submission","MyDivider","Challenge","loadingSubmission","setLoadingSubmission","getDoc","docSnap","exists","examplesImages","winner","m","maxWidth","amount","Home","scene","getElementById","Parallax","relativeInput","bottom","right","minH","justifyContent","direction","style","marginTop","to","rightIcon","AiOutlineArrowRight","muchWow","sm","NotFound","Create","toast","useToast","navigate","useNavigate","setStartDate","setEndDate","setTitle","setDescription","setPrizeAmount","setFiles","titleInvalid","setTitleInvalid","startDateInvalid","setStartDateInvalid","endDateInvalid","setEndDateInvalid","prizeAmountInvalid","setPrizeAmountInvalid","tokens","token","setTransactionHash","fundBounty","bountyAddress","parseFloat","volumeInWei","decimals","bigNumberVolumeInWei","BigNumber","toString","approveSucceeded","balanceOf","address","callerBalance","constants","AddressZero","approve","handleError","fundTxnReceipt","transactionHash","symbol","mintBounty","uuid","e","preventDefault","UUID","v4","parseInt","contract","exampleImages","status","duration","isClosable","isRequired","isInvalid","placeholder","onChange","target","prevFiles","newFiles","filter","meta","gap","templateColumns","alignSelf","colSpan","showTimeSelect","selected","dateFormat","darkTheme","lightTheme","minDate","maxDate","setDate","getDate","min","valueString","type","SelectWinner","setSelected","loadingWinner","setLoadingWinner","setWinnerHasBeenSelected","selectWinner","submissionRef","updateDoc","bountyRef","winnerSelected","handleSelect","components","Border","variants","border","defaultProps","Text","Background","backgroundColor","theme","extendTheme","config","initialColorMode","useSystemColorMode","colors","App","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","basename","justify","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","TimeAgo","addDefaultLocale","en","addLocale","ru","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","setDb","getFirestore"],"mappings":"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","file":"static/js/main.25978b87.chunk.js","sourcesContent":["import React from 'react';\nconst StoreContext = React.createContext();\nexport default StoreContext;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkTheme\":\"styles_darkTheme__2dOnH\",\"lightTheme\":\"styles_lightTheme__3QYJR\"};","import { useContext, useState } from 'react';\nimport {\n  VStack,\n  Text,\n  useColorMode,\n  useStyleConfig,\n  Flex,\n} from '@chakra-ui/react';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport Dropzone, { defaultClassNames, IDropzoneProps, IFileWithMeta, ILayoutProps } from 'react-dropzone-uploader'\nimport { create } from \"ipfs-http-client\";\nimport 'react-dropzone-uploader/dist/styles.css';\nimport StoreContext from '../../../store/Store/StoreContext';\nimport { useDb } from '../../../hooks/useFirebase';\n\nconst client = create({ url: 'https://ipfs.infura.io:5001/api/v0'});\n\n// add type defs to custom LayoutComponent prop to easily inspect props passed to injected components\nconst Layout = ({ input, previews, submitButton, dropzoneProps, files, extra: { maxFiles } }: ILayoutProps) => {\n  return (\n    <div>\n      {previews}\n\n      <div {...dropzoneProps}>\n        {files.length < maxFiles && input}\n      </div>\n\n      {files.length > 0 && submitButton}\n    </div>\n  )\n}\n\nconst InputContent = () => {\n  return (\n    <VStack spacing={2} textAlign=\"center\">\n      <Text sx={useStyleConfig('Text', { variant: 'teal' })} fontSize=\"3xl\">Drop your meme here 🖐️🎤</Text>\n      <Text\n        sx={useStyleConfig('Text', { variant: 'blackAndWhite' })}\n        fontSize=\"lg\"\n      >\n        (JPG, JPEG, PNG, GIF, SVG, ect.)\n      </Text>\n      <Text\n        sx={useStyleConfig('Text', { variant: 'blackAndWhite' })}\n        fontSize=\"lg\"\n      >\n        Be an open source hero and also include the raw files (PSD, PXD, TIFF, ect.)\n      </Text>\n    </VStack>\n  );\n}\n\n// we need to call submit method(_bountyId)\ninterface UploaderProps {\n  bountyId: string;\n  refreshData: () => void;\n  setLoading?: (isLoading: boolean) => void;\n}\nconst Uploader = ({\n  bountyId,\n  refreshData,\n  setLoading,\n}: UploaderProps) => {\n  const db = useDb();\n  const [appState] = useContext(StoreContext);\n  const [file, setFile] = useState<Buffer | null>(null);\n  const [urlArr, setUrlArr] = useState<any[]>([]);\n\n  function readFileAsync(file: IFileWithMeta):Promise<Buffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file.file);\n  \n      reader.onloadend = () => {\n        console.log(\"Buffer data: \", new Buffer(reader.result as ArrayBuffer));\n        setFile(new Buffer(reader.result as ArrayBuffer));\n        resolve(new Buffer(reader.result as ArrayBuffer));\n      };\n  \n      reader.onerror = reject;\n    })\n  }\n\n  // add type defs to function props to get TS support inside function bodies,\n  // and not just where functions are passed as props into Dropzone\n  const getUploadParams: IDropzoneProps['getUploadParams'] = () => ({ url: 'https://httpbin.org/post' })\n\n  const handleSubmit: IDropzoneProps['onSubmit'] = async (files, allFiles) => {\n    if (setLoading) {\n      setLoading(true);\n    }\n    // send to the bounty contract\n    const result = await appState.client.makeSubmission(bountyId);\n    console.log('result', result);\n    const { txnResponse, txnReceipt } = result;\n    const { events } = txnReceipt;\n    const { data } = events[0];\n    console.log('data', data);\n    console.log('files:', files);\n    console.log('allFiles:', allFiles);\n    let tmpArr = [];\n    for (let i = 0; i < allFiles.length; i++) {\n      const f = allFiles[i];\n      let arrayBuffer = await readFileAsync(f);\n      try {\n        const created = await client.add(arrayBuffer);\n        const url = `https://ipfs.infura.io/ipfs/${created.path}`;\n        console.log('url', url);\n        setUrlArr(prev => [...prev, { src: url }]);\n        tmpArr.push({ src: url });\n      } catch (error) {\n        console.log(error);\n      }\n      f.remove() \n    } // end for loop\n    try {\n      console.log('urlArr', urlArr);\n      if (db) {\n        const submissionsRef = doc(db, \"bounties\", bountyId, \"submissions\", data);\n        setDoc(submissionsRef, {\n          id: data,\n          date: new Date(),\n          files: tmpArr,\n          postedBy: txnReceipt.from,\n        });\n      } else { console.log('error no db') }\n    } catch (error) {\n      console.log('error uploading to firebase', error);\n    }\n    refreshData();\n    if (setLoading) {\n      setLoading(false);\n    }\n  }\n  \n  const { colorMode } = useColorMode()\n  const bdrClr = colorMode === 'light' ? \"#E2E8F0\" : \"#ffffff29\";\n\n  return (\n    <Dropzone\n      getUploadParams={getUploadParams}\n      LayoutComponent={Layout}\n      onSubmit={handleSubmit}\n      classNames={{\n        inputLabelWithFiles: defaultClassNames.inputLabel\n      }}\n      styles={{\n        dropzone: { borderColor: bdrClr, width: '100%' },\n        inputLabel: { position: 'relative', padding: \"80px 30px\" , width: '100%' },\n      }}\n      inputContent={<InputContent />}\n    />\n  )\n}\n\nexport default Uploader;\n","import { useState } from 'react';\nimport {\n  VStack,\n  Text,\n  useColorMode,\n  useStyleConfig,\n  Flex,\n} from '@chakra-ui/react';\nimport Dropzone, { defaultClassNames, getFilesFromEvent, IDropzoneProps, IFileWithMeta, ILayoutProps, StatusValue } from 'react-dropzone-uploader'\nimport { create } from \"ipfs-http-client\";\nimport 'react-dropzone-uploader/dist/styles.css';\n\nconst client = create({ url: 'https://ipfs.infura.io:5001/api/v0'});\n\n// add type defs to custom LayoutComponent prop to easily inspect props passed to injected components\nconst Layout = ({ input, previews, submitButton, dropzoneProps, files, extra: { maxFiles } }: ILayoutProps) => {\n  return (\n    <div>\n      {previews}\n\n      <div {...dropzoneProps}>\n        {files.length < maxFiles && input}\n      </div>\n\n      {files.length > 0 && submitButton}\n    </div>\n  )\n}\n\nconst InputContent = () => {\n  return (\n    <VStack spacing={2} textAlign=\"center\">\n      <Text sx={useStyleConfig('Text', { variant: 'blackAndWhite' })} fontSize=\"xl\">Drop your examples here</Text>\n    </VStack>\n  );\n}\n\ninterface UploaderProps {\n  handleChangeStatus: (file: IFileWithMeta, status: StatusValue, allFiles: IFileWithMeta[]) => void | { meta: { [name: string]: any; }; }\n};\nconst Uploader = ({\n  handleChangeStatus,\n}: UploaderProps) => {\n  const [file, setFile] = useState<Buffer | null>(null);\n  const [urlArr, setUrlArr] = useState<any[]>([]);\n\n  function readFileAsync(file: IFileWithMeta):Promise<Buffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file.file);\n  \n      reader.onloadend = () => {\n        console.log(\"Buffer data: \", new Buffer(reader.result as ArrayBuffer));\n        setFile(new Buffer(reader.result as ArrayBuffer));\n        resolve(new Buffer(reader.result as ArrayBuffer));\n      };\n  \n      reader.onerror = reject;\n    })\n  }\n\n  // add type defs to function props to get TS support inside function bodies,\n  // and not just where functions are passed as props into Dropzone\n  const getUploadParams: IDropzoneProps['getUploadParams'] = () => ({ url: 'https://httpbin.org/post' })\n\n  const handleSubmit: IDropzoneProps['onSubmit'] = async (files, allFiles) => {\n    for (let i = 0; i < allFiles.length; i++) {\n      const f = allFiles[i];\n      let arrayBuffer = await readFileAsync(f);\n      try {\n        const created = await client.add(arrayBuffer);\n        const url = `https://ipfs.infura.io/ipfs/${created.path}`;\n        console.log('url', url);\n        setUrlArr(prev => [...prev, url]);    \n      } catch (error) {\n        console.log(error);\n      }\n      f.remove() \n    }\n  }\n  \n  const { colorMode } = useColorMode()\n  const bdrClr = colorMode === 'light' ? \"#E2E8F0\" : \"#ffffff29\";\n\n  return (\n    <Dropzone\n      onChangeStatus={handleChangeStatus}\n      getUploadParams={getUploadParams}\n      LayoutComponent={Layout}\n      onSubmit={handleSubmit}\n      classNames={{\n        inputLabelWithFiles: defaultClassNames.inputLabel\n      }}\n      styles={{\n        dropzone: { borderColor: bdrClr, width: '100%' },\n        inputLabel: { position: 'relative', padding: \"50px 0px\" , width: '100%' },\n      }}\n      inputContent={<InputContent />}\n      maxSizeBytes={1000000}\n      maxFiles={15}\n      SubmitButtonComponent={() => null}\n    />\n  )\n}\n\nexport default Uploader;\n","import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","import {\n  Text,\n  Link,\n  VStack,\n} from '@chakra-ui/react';\n\nconst Footer = () => {\n  return (\n    <VStack mt={7} p={10} textAlign=\"center\">\n      <Text>\n        We ❤️ open source (duh).\n      </Text>\n      <Text>\n        View or contribute to our code on{' '}\n        <Link\n          href=\"https://github.com/kylekaplan/open-work\"\n          isExternal\n          textDecoration=\"underline\"\n        >\n          Github\n        </Link>\n        {'.'}\n      </Text>\n    </VStack>\n  )\n}\n\nexport default Footer;\n","import {\n  Accordion,\n  AccordionItem,\n  AccordionButton as BorderedAccordionButton,\n  AccordionIcon as BorderedAccordionIcon,\n  AccordionPanel as BorderedAccordionPanel,\n  useStyleConfig,\n} from '@chakra-ui/react'\n\nfunction BorderedAccordion(props: any) {\n  const { variant, ...rest } = props\n\n  const styles = useStyleConfig('Border', { variant })\n  console.log('styles', styles)\n\n  return <Accordion sx={styles} {...rest} />\n}\n\nfunction BorderedAccordionItem(props: any) {\n  const { variant, ...rest } = props\n\n  return <AccordionItem borderBottom={0} borderTop={0} {...rest} />\n}\n\nexport {\n  BorderedAccordion,\n  BorderedAccordionItem,\n  BorderedAccordionButton,\n  BorderedAccordionIcon,\n  BorderedAccordionPanel,\n};\n\nexport default BorderedAccordion\n","import { Box, HStack, Text, useStyleConfig } from '@chakra-ui/react';\nimport {\n  BorderedAccordion,\n  BorderedAccordionButton,\n  BorderedAccordionItem,\n  BorderedAccordionPanel,\n  BorderedAccordionIcon,\n} from '../../atoms/BorderedAccordion';\n\ninterface AccordionDataDisplayProps {\n  title: string;\n  icon?: JSX.Element;\n  children: React.ReactNode;\n}\nconst AccordionDataDisplay = ({\n  title,\n  icon,\n  children,\n}: AccordionDataDisplayProps) => (\n  <BorderedAccordion width=\"100%\" defaultIndex={[0]} allowMultiple>\n    <BorderedAccordionItem>\n      <h2>\n        <BorderedAccordionButton>\n          <Box\n            flex='1'\n            fontSize=\"lg\"\n            fontFamily=\"'Poppins', sans-serif\"\n          >\n            <HStack spacing={2}>\n              {icon}\n              <Text>{title}</Text>\n            </HStack>\n          </Box>\n          <BorderedAccordionIcon />\n        </BorderedAccordionButton>\n      </h2>\n      <BorderedAccordionPanel\n        pb={4}\n        sx={useStyleConfig('Background')}\n      >\n        {children}\n      </BorderedAccordionPanel>\n    </BorderedAccordionItem>\n  </BorderedAccordion>\n)\n\nexport default AccordionDataDisplay;\n","import { Text } from '@chakra-ui/react';\nimport { AiOutlineAlignLeft } from 'react-icons/ai';\nimport AccordionDataDisplay from '../../../molecules/AccordionDataDisplay';\n\ninterface DescriptionProps {\n  description: string;\n}\nconst Description = ({\n  description,\n}: DescriptionProps) => (\n  <AccordionDataDisplay\n      title=\"Description\"\n      icon={<AiOutlineAlignLeft />}\n    >\n      <Text fontSize=\"lg\">\n        {description}\n      </Text>\n  </AccordionDataDisplay>\n)\n\nexport default Description;\n","import {\n  HStack,\n  Image,\n} from '@chakra-ui/react';\nimport { Gallery, Item } from 'react-photoswipe-gallery';\n\nconst getThumbBoundsFn = (index: number) => {\n\n  // find thumbnail element\n  var thumbnail = document.querySelectorAll('.thumbnails')[index];\n\n  // get window scroll Y\n  var pageYScroll = window.pageYOffset || document.documentElement.scrollTop; \n  // optionally get horizontal scroll\n\n  // get position of element relative to viewport\n  var rect = thumbnail.getBoundingClientRect(); \n\n  // w = width\n  return {x:rect.left, y:rect.top + pageYScroll - 3, w:rect.width};\n\n\n  // Good guide on how to get element coordinates:\n  // http://javascript.info/tutorial/coordinates\n}\n\ninterface ImageExamplesProps {\n  imgs: { image: string, thumbnail: string, imgWidth: number, imgHeight: number }[]\n}\nconst ImageExamples = ({ imgs }: ImageExamplesProps) => {\n  return (\n    <Gallery\n      options={{ bgOpacity: 0.8, getThumbBoundsFn: getThumbBoundsFn }}\n    >\n      <HStack mt={2} mb={1} overflow=\"scroll\">\n        {imgs.map((item) => (\n          <Item\n            key={item.image}\n            original={item.image}\n            thumbnail={item.thumbnail}\n            width={item.imgWidth}\n            height={item.imgHeight} \n          >\n            {({ ref, open }) => (\n              <Image\n                ref={ref as React.MutableRefObject<HTMLImageElement>}\n                onClick={open}\n                src={item.thumbnail}\n                className=\"thumbnails\"\n                alt=\"\"\n              />\n            )}\n          </Item>\n        ))}\n      </HStack>\n    </Gallery>\n  )\n}\n\nexport default ImageExamples;\n","import { FaClipboardCheck } from 'react-icons/fa';\nimport AccordionDataDisplay from \"../../../molecules/AccordionDataDisplay\";\nimport ImageExamples from '../ImageExamples';\nimport img1 from '../../../assets/images/ultra-sound-money/1.jpeg'\nimport img2 from '../../../assets/images/ultra-sound-money/2.jpeg'\nimport img1Thumbnail from '../../../assets/images/ultra-sound-money/1thumbnail.jpeg';\nimport img2Thumbnail from '../../../assets/images/ultra-sound-money/2thumbnail.jpeg';\n\n// const imgs = [\n//   {\n//     thumbnail: img1Thumbnail,\n//     image: img1,\n//     imgWidth: 508,\n//     imgHeight: 491,\n//   },\n//   {\n//     thumbnail: img2Thumbnail,\n//     image: img2,\n//     imgWidth: 2702,\n//     imgHeight: 1514,\n//   },\n// ];\n\ninterface ImageExamplesProps {\n  imgs: {\n    image: string;\n    thumbnail: string;\n    imgWidth: number;\n    imgHeight: number;\n  }[]\n}\nconst ExampleImages = ({\n  imgs,\n}: ImageExamplesProps) => {\n  return (\n    <AccordionDataDisplay\n      title=\"Example Images\"\n      icon={<FaClipboardCheck />}\n    >\n      <ImageExamples imgs={imgs} />\n    </AccordionDataDisplay>\n  );\n};\n\nexport default ExampleImages;","import { Box, useStyleConfig } from '@chakra-ui/react'\n\nfunction BorderedBox(props: any) {\n  const { variant, ...rest } = props\n\n  const styles = useStyleConfig('Border', { variant })\n\n  // Pass the computed styles into the `__css` prop\n  return <Box sx={styles} {...rest} />\n}\n\nexport default BorderedBox\n","import { useContext, useState } from 'react';\nimport {\n  Button,\n} from '@chakra-ui/react';\nimport StoreContext from '../../store/Store/StoreContext';\n\ninterface ClaimButtonProps {\n  bountyId: string;\n}\nconst ClaimButton = ({\n  bountyId,\n}: ClaimButtonProps) => {\n    const [isClaiming, setIsClaiming] = useState(false);\n    const [appState] = useContext(StoreContext);\n    \n    const claim = async () => {\n      console.log('claiming bounty');\n      setIsClaiming(true);\n      try {\n        const result = await appState.client.claimBounty(bountyId);\n        console.log('result:', result);\n      }\n      catch (error) {\n        console.log('error', error);\n      }\n      setIsClaiming(false);\n    };\n\n    return (\n      <>\n        <Button\n          colorScheme=\"teal\"\n          mt={4}\n          onClick={claim}\n          isLoading={isClaiming}\n          disabled={isClaiming}\n        >\n          Claim Bounty\n        </Button>\n      </>\n    );\n};\n\nexport default ClaimButton;\n","import { useState } from 'react';\nimport {\n  Button,\n} from '@chakra-ui/react';\nimport { ethers } from 'ethers';\nimport { SiweMessage } from 'siwe';\n\nconst domain = window.location.host;\nconst origin = window.location.origin;\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = provider.getSigner();\n\nconst ConnectWalletButton = () => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n    const [isConnectingError, setIsConnectingError] = useState(false);\n    const [isConnectingErrorMessage, setIsConnectingErrorMessage] = useState('');\n    const [isConnectingErrorCode, setIsConnectingErrorCode] = useState('');\n    const [isConnectingErrorData, setIsConnectingErrorData] = useState('');\n    \n    const connectWallet = async () => {\n      console.log('connect wallet');\n      setIsConnecting(true);\n      setIsConnectingError(false);\n      setIsConnectingErrorMessage('');\n      setIsConnectingErrorCode('');\n      setIsConnectingErrorData('');\n      try {\n        provider.send('eth_requestAccounts', [])\n          .catch(() => console.log('user rejected request'));\n      }\n      catch (error) {\n        console.log('error', error);\n        setIsConnectingError(true);\n        setIsConnectingErrorMessage(error.message);\n        setIsConnectingErrorCode(error.code);\n        setIsConnectingErrorData(error.data);\n      }\n      setIsConnecting(false);\n    };\n\n    const createSiweMessage = (address, statement) => {\n      console.log('address', address);\n      const message = new SiweMessage({\n          domain,\n          address,\n          statement,\n          uri: origin,\n          version: '1',\n          chainId: '1'\n      });\n      return message.prepareMessage();\n    }\n    \n    const signInWithEthereum = async () => {\n      const message = createSiweMessage(\n        await signer.getAddress(),\n        'Sign in with Ethereum to the app.'\n      );\n      console.log(await signer.signMessage(message));\n    };\n\n    return (\n      <>\n        <Button colorScheme=\"teal\" mt={4} onClick={connectWallet}>\n          Connect your wallet\n        </Button>\n        {/* <Button colorScheme=\"teal\" mt={4} onClick={signInWithEthereum}>\n          Sign in with Ethereum\n        </Button> */}\n      </>\n    );\n};\n\nexport default ConnectWalletButton;\n","import Countdown from 'react-countdown';\nimport {\n  HStack,\n  Text,\n  VStack,\n} from '@chakra-ui/react';\n\nconst twoDigits = (n: number) => {\n  return n > 9 ? \"\" + n: \"0\" + n;\n}\n\n\ninterface BlockProps {\n  value: string;\n  label: string;\n}\nconst Block = ({ value, label }: BlockProps) => {\n  return (\n    <VStack alignItems=\"start\">\n      <Text fontSize={20} fontWeight={500}>\n        {value}\n      </Text>\n      <Text fontSize={15} fontWeight={400}>\n        {label}\n      </Text>\n    </VStack>\n  )\n}\ninterface TimeLeftProps {\n  date: number\n}\nconst TimeLeft = ({ date }: TimeLeftProps) => {\n  return (\n    <Countdown\n      date={date}\n      renderer={({ days, hours, minutes, seconds }) => (\n        <>\n          <HStack spacing={{ base: 6, md: 8, lg: 10, xl: 12 }} mt={6}>\n            <Block value={twoDigits(days)} label=\"Days\" />\n            <Block value={twoDigits(hours)} label=\"Hours\" />\n            <Block value={twoDigits(minutes)} label=\"Minutes\" />\n            <Block value={twoDigits(seconds)} label=\"Seconds\" />\n          </HStack>\n          {/* {twoDigits(days)}:{twoDigits(hours)}:{twoDigits(minutes)}:{twoDigits(seconds)} */}\n        </>\n      )}\n    />\n  );\n}\n\nexport default TimeLeft;\n","import { Box, DarkMode, Text } from \"@chakra-ui/react\";\n\ninterface NFTViewerProps {\n  title: string;\n  postedBy: string;\n  startDate: Date;\n  endDate: Date;\n  prizeAmount: string;\n}\nconst NFTViewer = ({\n  title,\n  postedBy,\n  startDate,\n  endDate,\n  prizeAmount,\n}: NFTViewerProps) => {\n  console.log('in NFTViewer prizeAmo  ', prizeAmount);\n  return (\n    <DarkMode>\n      <Box height=\"100%\" bg=\"black\" p={4}>\n        <Text><b>Title:</b> {title}</Text>\n        <Text><b>Posted by:</b> {postedBy}</Text>\n        <Text><b>Start Date:</b> {startDate.toUTCString()}</Text>\n        <Text><b>End Date:</b> {endDate.toUTCString()}</Text>\n        <Text><b>Prize amount:</b> {prizeAmount}</Text>\n      </Box>\n    </DarkMode>\n  );\n}\n\nexport default NFTViewer;\n","import {\n  Box,\n  Text,\n  Heading,\n  VStack,\n  Flex,\n  Divider,\n  HStack,\n  useStyleConfig,\n} from '@chakra-ui/react';\nimport { FaEthereum } from 'react-icons/fa';\nimport BorderedBox from '../../../atoms/BorderedBox';\nimport ClaimButton from '../../../atoms/ClaimButton';\nimport ConnectWalletButton from '../../../atoms/ConnectWalletButton';\nimport TimeLeft from '../../../molecules/TimeLeft';\nimport NFTViewer from '../NFTViewer.tsx';\n\n// const data = {\n//   title: 'Ultra Create an original Ultra Sound Money meme. Money',\n//   postedBy: 'kylekaplan.eth',\n//   startDate: 'January 7th, 2022',\n//   endDate: 'January 14th, 2022',\n//   prizeAmount: '0.01 ETH',\n// };\n\ninterface TopFoldProps {\n  id: string;\n  title: string;\n  postedBy: string;\n  startDate: Date;\n  endDate: Date;\n  prizeAmount: string;\n  isWinnerSelected: boolean;\n}\nconst TopFold = ({\n  id,\n  title,\n  postedBy,\n  startDate,\n  endDate,\n  prizeAmount,\n  isWinnerSelected,\n}: TopFoldProps) => {\n  // const endDate = new Date('Febuary 20, 2022 12:00:00');\n  return (\n    <Flex>\n      {/* NFT Viewer on large screens */}\n      <Box display={{ base: 'none', md: 'block' }}>\n        <NFTViewer\n          title={title}\n          postedBy={postedBy}\n          startDate={startDate}\n          endDate={endDate}\n          prizeAmount={prizeAmount}\n        />\n      </Box>\n      <Box ml={{ base: 0, md: 30 }}>\n        <VStack align=\"start\" spacing={5}>\n          <Heading\n            fontSize=\"4xl\"\n            fontWeight=\"bold\"\n            fontFamily=\"'Work Sans', sans-serif;\"\n          >\n            {title}\n          </Heading>\n          {/* NFT Viewer on small screens */}\n          <Box width=\"100%\" display={{ base: 'block', md: 'none' }}>\n            <NFTViewer\n              title={title}\n              postedBy={postedBy}\n              startDate={startDate}\n              endDate={endDate}\n              prizeAmount={prizeAmount}\n            />\n          </Box>\n          <Text\n            fontSize=\"md\"\n            fontFamily=\"'Poppins', sans-serif\"\n          >\n            By: <Text as=\"span\" sx={useStyleConfig('Text', { variant: 'teal' })}>{postedBy}</Text>\n          </Text>\n        </VStack>\n        <BorderedBox\n          mt={8}\n          fontFamily=\"'Poppins', sans-serif\"\n        >\n          <Box p=\"20px\">\n            <Text fontSize={16}>\n              Challenge ends {endDate.toLocaleString('default', { month: 'long', day: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit', timeZone: 'EST' })} EST.\n            </Text>\n            <TimeLeft date={endDate.getTime()} />\n          </Box>\n          <Divider />\n          <Box\n            p={30}\n            sx={useStyleConfig('Background')}\n            borderBottomRadius={8}\n          >\n            <Text>\n              Prize:\n            </Text>\n            <HStack fontSize=\"30px\">\n              <FaEthereum />\n              <Text>{prizeAmount}</Text>\n            </HStack>\n            {isWinnerSelected\n              ? <ClaimButton bountyId={id} />\n              : <ConnectWalletButton />\n            }\n          </Box>\n        </BorderedBox>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default TopFold;\n","import {\n  Box,\n  Image,\n} from \"@chakra-ui/react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport ReactTimeAgo from 'react-time-ago'\nimport './styles.css';\n\nconst property = {\n  imageUrl: 'https://picsum.photos/200',\n  imageAlt: 'hi',\n  date: '2 days ago',\n  by: '0x058092380943284938402394849038420',\n}\n\ninterface CardProps {\n  files: { src: string }[];\n  imageAlt: string;\n  date: Date;\n  postedBy: string;\n}\nconst Card = ({\n  files,\n  imageAlt,\n  date,\n  postedBy,\n}: CardProps) => {\n  return (\n    <Box maxW='2xl' borderWidth='1px' borderRadius='lg' overflow=\"hidden\">\n      {!(files.length > 1) // not greater than 1\n        ? <Image src={files[0]?.src} alt={imageAlt} />\n        : (\n          <Carousel>\n            {files.map((file, index) => (\n                <div key={file?.src} >\n                  <Image src={file.src} />\n                </div>\n            ))}\n          </Carousel>\n        )\n      }\n      <Box p='6'>\n        <Box display='flex' alignItems='baseline'>\n          <Box\n            color='gray.500'\n            fontWeight='semibold'\n            letterSpacing='wide'\n            fontSize='xs'\n          >\n            {/* {date.toUTCString()} */}\n            <ReactTimeAgo date={date} locale=\"en-US\"/>\n          </Box>\n        </Box>\n\n        <Box\n          mt='1'\n          fontWeight='semibold'\n          as='h4'\n          lineHeight='tight'\n          isTruncated\n        >\n          By: {postedBy}\n        </Box>\n        {/* <Box display='flex' mt='2' alignItems='center'>\n          <Box color='yellow.400' mr='2'>5 stars</Box>\n          <Box as='span' ml='2' color='gray.600' fontSize='sm'>\n            {reviewCount} reviews\n          </Box>\n        </Box> */}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Card;","import {\n  Box,\n  Wrap,\n  WrapItem,\n} from \"@chakra-ui/react\"\nimport { Key, useEffect, useState } from \"react\";\nimport { doc, getDocs, collection, DocumentData } from \"firebase/firestore\";\nimport { useParams } from \"react-router-dom\";\nimport { useDb } from \"../../hooks/useFirebase\";\nimport AccordionDataDisplay from \"../../molecules/AccordionDataDisplay\";\nimport Card from \"./Card\"\n\nconst submissions = [\n  {\n    id: 1,\n    imageAlt: 'hi',\n    date: '2 days ago',\n    postedBy: 'vitalik.eth',\n    files: [\n      // {\n      //   src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      // },\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      }\n    ],\n  },\n  {\n    imageAlt: 'hi',\n    date: '2 days ago',\n    postedBy: 'vitalik.eth',\n    files: [\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      },\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      }\n    ],\n  },\n  {\n    id: 3,\n    imageAlt: 'hi',\n    date: '2 days ago',\n    postedBy: 'vitalik.eth',\n    files: [\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      },\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      }\n    ],\n  },\n  {\n    id: 4,\n    imageAlt: 'hi',\n    date: '2 days ago',\n    postedBy: 'vitalik.eth',\n    files: [\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      },\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      }\n    ],\n  },\n];\n\n\nconst DisplaySubmissions = () => {\n  const db = useDb()\n  let { id } = useParams();\n  const [fireData, setFireData] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  \n  const getData = async () => {\n    if (typeof id === 'string' && db) {\n      // const docRef = doc(db, \"bounties\", id);\n      // const docSnap = await getDoc(docRef);\n      const docRef = doc(db, \"bounties\", id);\n      const querySnapshot = await getDocs(collection(docRef, \"submissions\"));\n\n      if (querySnapshot) {\n        let tmp: DocumentData[] = []\n        querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          tmp.push(doc.data());\n        });\n        setFireData(tmp);\n        setLoading(false);\n      } else {\n        console.log(\"No such querySnapshot!\");\n        setLoading(false);\n      }\n    } else {\n      console.log('id is not a string');\n    }\n  };\n\n  useEffect(() => {\n    getData()\n  }, [id, db]);\n\n  return (\n    <Box>\n      <AccordionDataDisplay title=\"Open Source Memes:\">\n        {!loading && fireData.length === 0 && <p>No submittions yet. Be the first!</p>}\n        {!loading && fireData\n          ? (\n            <Wrap spacing={5} mt={3} mb={3}>\n              {fireData.map((submission: { id: Key | null | undefined; files: { src: string; }[]; imageAlt: string; date: { seconds: number; }; postedBy: string; }) => (\n                <WrapItem\n                  w={{\n                    base: \"100%\",\n                    md: \"Calc(50% - 20px)\", // 50% of space minus the 5px of spacing\n                    lg: \"Calc(33% - 20px)\", // 33% of space minus the 5px of spacing\n                    xl: \"Calc(25% - 20px)\", // 25% of space minus the 5px of spacing\n                  }}\n                >\n                  <Card\n                    key={submission.id}\n                    files={submission.files}\n                    imageAlt={submission.imageAlt}\n                    date={new Date(submission.date.seconds * 1000)}\n                    postedBy={submission.postedBy}\n                  />\n                </WrapItem>\n              ))}\n          </Wrap>\n          )\n          : (\n            <Box>\n              <h1>Loading...</h1>\n            </Box>\n          )}\n      </AccordionDataDisplay>\n    </Box>\n  );\n};\n\nexport default DisplaySubmissions;\n","import { Box } from '@chakra-ui/react';\nimport { useParams } from 'react-router-dom';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport './challenge.css';\nimport Uploader from './Uploader';\nimport Footer from '../../organsims/Footer';\nimport Description from './Accordions/Description';\nimport ExampleImages from './Accordions/ExampleImages';\nimport TopFold from './TopFolder';\nimport DisplaySubmissions from '../../organsims/DisplaySubmissions';\nimport { useEffect, useState } from 'react';\nimport { useDb } from '../../hooks/useFirebase';\n\n\nconst MyDivider = () => (\n  <Box height={30} />\n);\n\ninterface ChallengeProps {};\nconst Challenge = ({}: ChallengeProps) => {\n  const db = useDb();\n  let { id } = useParams();\n  const [fireData, setFireData] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSubmission, setLoadingSubmission] = useState<boolean>(false);\n\n  const getData = async () => {\n    console.log('type of id:', typeof id);\n    if (typeof id === 'string' && db) {\n      const docRef = doc(db, \"bounties\", id);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        console.log(\"Document data:\", docSnap.data());\n        setFireData({ ...docSnap.data() });\n        setLoading(false);\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n        setLoading(false);\n      }\n    } else {\n      console.log('id is not a string');\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [id, db]);\n\n  if (loading || !id) {\n    return null;\n  };\n\n  const endDate = new Date(fireData.endDate.seconds * 1000);\n  const startDate = new Date(fireData.startDate.seconds * 1000);\n  console.log('fireData:', fireData);\n  const {\n    title,\n    postedBy,\n    prizeAmount,\n    description,\n    examplesImages,\n    winner,\n  } = fireData;\n  console.log('postedBy:', postedBy);\n  return (\n    <Box\n      m=\"0 auto\"\n      padding={{ base: \"30px 5px\", md: \"30px 40px\", lg: \"30px 60px\", xl: \"30px 80px\" }}\n      maxWidth=\"1600px\"\n    >\n      <TopFold\n        id={id}\n        title={title}\n        postedBy={postedBy}\n        startDate={startDate}\n        endDate={endDate}\n        prizeAmount={prizeAmount.amount}\n        isWinnerSelected={winner}\n      />\n      <MyDivider />\n      {description && <Description description={description} />}\n      <MyDivider />\n      {examplesImages && (\n        <>\n          <ExampleImages imgs={examplesImages} />\n          <Box height={{ base: 10, md: 30, lg: 75 }} />\n        </>\n      )}\n      <Uploader bountyId={id} refreshData={getData} setLoading={setLoadingSubmission} />\n      <MyDivider />\n      {!loadingSubmission && <DisplaySubmissions />}\n      <Footer />\n    </Box>\n  );\n}\n\nexport default Challenge;\n","export default __webpack_public_path__ + \"static/media/much_wow.8624a0da.jpeg\";","import { useEffect } from 'react';\nimport {\n  Box,\n  Text,\n  Button,\n  VStack,\n  Stack,\n  Heading,\n  Icon,\n  Image,\n} from \"@chakra-ui/react\";\nimport Parallax from 'parallax-js'\nimport {\n  Link\n} from 'react-router-dom';\nimport { AiOutlineArrowRight } from 'react-icons/ai';\nimport './home.css';\nimport muchWow from '../../assets/images/much_wow.jpeg';\n\nconst Home = () => {\n\n  useEffect(() => {\n    var scene = document.getElementById('scene');\n    new Parallax(scene, {\n      relativeInput: true\n    });    \n  }, []);\n\n  return (\n    <>\n    {/* Parallax background image */}\n    <Box\n      id=\"scene\"\n      data-relative-input=\"true\"\n      position=\"absolute\"\n      top=\"0\"\n      bottom=\"0\"\n      right=\"0\"\n      left=\"0\"\n    >\n      <Box\n        minH=\"90vh\"\n        data-depth=\"0.2\"\n        className='background5'\n      />\n    </Box>\n    {/* Start of regular content */}\n    <Box>\n      <VStack\n        spacing={3}\n        minH=\"66vh\"\n        textAlign=\"center\"\n        justifyContent=\"center\"\n      >\n        <Heading\n          fontSize='6xl'\n          fontWeight='extrabold'\n          // fontFamily='\"Baloo Bhaijaan 2\"'\n          className='headerText'\n        >\n          Earn Crypto by Making Memes\n        </Heading>\n        <Text\n          color='gray.350'\n          fontSize=\"3xl\"\n        >\n          The best meme wins. All memes are open source.\n        </Text>\n        <Stack direction='row' spacing={4} style={{ marginTop: '30px' }}>\n          <Link to=\"/challenge/OVyNZQZY8WqDKF7bdP6Z\">\n            <Button\n              rightIcon={<Icon as={AiOutlineArrowRight} />}\n              // colorScheme=\"#48BB78\"\n              colorScheme=\"teal\"\n              // color='white'\n              // bgGradient=\"linear-gradient(163.91deg,#944af2 18.37%,#448fff 82.04%)\"\n              variant='solid'\n              size=\"lg\"\n              height='56px'\n              className=\"ctaButton\"\n            >\n              Get Started\n            </Button>\n          </Link>\n        </Stack>\n        <Image\n          src={muchWow}\n          className=\"dogeImg\"\n          alt=\"Doge meme\"\n          width={{ base: 290, sm: 290, md: 290, lg: 333, xl: 333 }}\n        />\n      </VStack>\n      <VStack\n        minH={{ base: '35vh', sm: \"35vh\", md: \"23vh\", lg: \"23vh\", xl: \"23vh\" }}\n      />\n    </Box>\n    </>\n  );\n}\n\nexport default Home;\n","import {\n  Box,\n} from '@chakra-ui/react';\n\nconst NotFound = () => {\n  return (\n    <Box>\n      Page not found.\n    </Box>\n  )\n}\n\nexport default NotFound;\n","import {\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Input,\n  Textarea,\n  VStack,\n  useColorMode,\n  Grid,\n  GridItem,\n  NumberInput,\n  NumberInputField,\n  HStack,\n  Button,\n  useToast,\n} from '@chakra-ui/react'\nimport { useNavigate } from \"react-router-dom\";\nimport UUID from \"node-uuid\";\nimport { ethers } from 'ethers';\nimport { useContext, useState } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport { FaEthereum } from 'react-icons/fa';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport StoreContext from '../../store/Store/StoreContext';\nimport styles from './styles.module.css';\nimport Uploader from './Uploader';\nimport { useDb } from '../../hooks/useFirebase';\n\nconst Create = () => {\n  const db = useDb();\n  const toast = useToast();\n  let navigate = useNavigate();\n  const { colorMode } = useColorMode();\n  const [appState] = useContext(StoreContext);\n  const [startDate, setStartDate] = useState<Date | null>(new Date());\n  const [endDate, setEndDate] = useState<Date | null>(null);\n  const [title, setTitle] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [prizeAmount, setPrizeAmount] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [files, setFiles] = useState<any>([]);\n\n  const [titleInvalid, setTitleInvalid] = useState<boolean>(false);\n  const [startDateInvalid, setStartDateInvalid] = useState<boolean>(false);\n  const [endDateInvalid, setEndDateInvalid] = useState<boolean>(false);\n  const [prizeAmountInvalid, setPrizeAmountInvalid] = useState<boolean>(false);\n\n  const handleChangeStatus = (props: { meta: { id: any; }; }, status: string) => {\n    if (status === 'done') {\n      setFiles((prevFiles: any) => [...prevFiles, props]);\n    } else if (status === 'removed') {\n      const newFiles = files.filter((file: any) => file.meta.id !== props.meta.id);\n      setFiles([...newFiles]);\n    }\n  }\n\n  // Methods\n  function sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  const [token, setToken] = useState(appState.tokens[0]);\n  const [transactionHash, setTransactionHash] = useState(null);\n\n  async function fundBounty(bountyAddress: any) {\n    console.log('in fundBounty');\n    console.log('bountyAddress:', bountyAddress);\n    // setIsLoading(true);\n    console.log('parseFloat(prizeAmount):', parseFloat(prizeAmount));\n    console.log('token:', token);\n    const volumeInWei = +prizeAmount * 10 ** token.decimals;\n\n    if (volumeInWei == 0) {\n      // setError({ title: 'Zero Volume Sent', message: 'Must send a greater than 0 volume of tokens.' });\n      // setIsLoading(false);\n      return;\n    }\n\n    const bigNumberVolumeInWei = ethers.BigNumber.from(volumeInWei.toString());\n    console.log('bigNumberVolumeInWei:', bigNumberVolumeInWei);\n\n    let approveSucceeded = false;\n\n    try {\n      const callerBalance = await appState.client.balanceOf('library', 'account', token.address);\n\n      console.log('callerBalance:', callerBalance);\n\n      if (callerBalance < bigNumberVolumeInWei) {\n        console.log('Funds Too Low');\n        const title = 'Funds Too Low';\n        const message = 'You do not have sufficient funds for this deposit';\n        // setError({ message, title });\n        // setIsLoading(false);\n        // setShowErrorModal(true);\n        return;\n      }\n    } catch (error) {\n      console.log('hey error:');\n      console.log(error);\n      const title = 'Error';\n      const message = 'A contract call exception occurred';\n      // setError({ message, title });\n      // setIsLoading(false);\n      // setShowErrorModal(true);\n      return;\n    }\n\n    try {\n      if (token.address != ethers.constants.AddressZero) {\n        await appState.client.approve(\n          'library',\n          bountyAddress,\n          token.address,\n          bigNumberVolumeInWei\n        );\n      }\n      approveSucceeded = true;\n    } catch (error) {\n      console.log('yo error:');\n      const { message, title } = appState.client.handleError(error, { bountyAddress });\n      console.log('message:', message);\n      console.log('title:', title);\n      // setError({ message, title });\n      // setIsLoading(false);\n      // setShowErrorModal(true);\n    }\n\n    console.log('approveSucceeded:', approveSucceeded);\n\n    if (approveSucceeded) {\n      try {\n        const fundTxnReceipt = await appState.client.fundBounty(\n          'library',\n          bountyAddress,\n          token.address,\n          bigNumberVolumeInWei\n        );\n        console.log('fundTxnReceipt:', fundTxnReceipt);\n        setTransactionHash(fundTxnReceipt.transactionHash);\n        console.log(`Successfully funded issue ${bountyAddress} with ${prizeAmount} ${token.symbol}!`);\n        // setSuccessMessage(\n        // \t`Successfully funded issue ${bountyAddress} with ${volume} ${token.symbol}!`\n        // );\n        // setShowSuccessModal(true);\n        // refreshBounty();\n        // setIsLoading(false);\n        return fundTxnReceipt;\n      } catch (error) {\n        console.log('hi error:', error);\n        const { message, title } = appState.client.handleError(error, { bountyAddress });\n        // setError({ message, title });\n        // setIsLoading(false);\n        // setShowErrorModal(true);\n      }\n    }\n  }\n\n  // console.log('library', library);\n  async function mintBounty(uuid: string) {\n    console.log('minting bounty');\n    try {\n      // setMintBountyState(TRANSACTION_PENDING());\n\n      // console.log('library', library);\n      const { bountyAddress } = await appState.client.mintBounty(\n        'library',\n        uuid, // mintBountyState.issueId,\n        'randomOrgName', // mintBountyState.orgName\n      );\n\n      console.log('bountyAddress:', bountyAddress);\n\n      // const from = txnResponse.from;\n      // const nonce = txnResponse.nonce;\n\n      // const realAddress = ethers.utils.getContractAddress({ from, nonce });\n\n      // console.log('realAddress:', realAddress);\n\n      // await fundBounty(realAddress);\n\n      // let bountyId = null;\n      // while (bountyId == 'undefined') {\n      // \tconst bountyResp = await appState.openQSubgraphClient.getBounty(bountyAddress);\n      // \tbountyId = bountyResp?.bountyId;\n      // \tconsole.log('bountyId', bountyId);\n      // \tawait sleep(500);\n      // }\n\n      // await sleep(1000);\n\n      console.log('done')\n      return bountyAddress;\n\n      // router.push(\n      // \t`${process.env.NEXT_PUBLIC_BASE_URL}/bounty/${bountyAddress}`\n      // );\n    } catch (error) {\n      console.log('error in mintboutny', error);\n      const { message, title } = appState.client.handleError(error);\n      console.log('message', message);\n      console.log('title', title);\n      // setMintBountyState(TRANSACTION_FAILURE({ message, title }));\n    }\n  }\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    const uuid = UUID.v4();\n    setTitleInvalid(false);\n    setStartDateInvalid(false);\n    setEndDateInvalid(false);\n    setPrizeAmountInvalid(false);\n    console.log('endDate', endDate);\n    if (title === '' || !startDate || !endDate || !prizeAmount || prizeAmount === '0') {\n      setLoading(false);\n    }\n    if (title === '') {\n      setTitleInvalid(true);\n      return;\n    }\n    if (!startDate) {\n      setStartDateInvalid(true);\n      return;\n    }\n    if (!endDate) {\n      setEndDateInvalid(true);\n      return;\n    }\n    if (!prizeAmount || prizeAmount === '0') {\n      setPrizeAmountInvalid(true);\n      return;\n    }\n    if (startDate && endDate && startDate > endDate) {\n      setStartDateInvalid(true);\n    }\n    console.log('files', files);\n    // TODO: wrap mint bounty in try/catch\n    const bountyAddress = await mintBounty(uuid);\n    const fundTxnReceipt = await fundBounty(bountyAddress);\n    // upload to firebase\n    console.log('uploading to firebase');\n    try {\n      if (db) {\n        await setDoc(doc(db, \"bounties\", uuid), {\n          id: uuid,\n          title,\n          description,\n          prizeAmount: { amount: parseInt(prizeAmount), contract: token.address },\n          startDate,\n          endDate,\n          exampleImages: files,\n          postedBy: fundTxnReceipt.from,\n        });\n      } else { console.log('error no db') }\n    } catch (error) {\n      console.log('error uploading to firebase', error);\n    }\n\n    // await sleep(1000);\n    console.log('finished submtting');\n    setLoading(false);\n    navigate(`/challenge/${uuid}`);\n    toast({\n      title: 'Challenge Created.',\n      description: \"You challenge has been created successfully!\",\n      status: 'success',\n      duration: 9000,\n      isClosable: true,\n    })\n  };\n\n  // const from = \"0x04E7831739bA350b17E36541148368f8541552d6\";\n  // const from = '0xe5b2c677a667972a8bc48d2de6835dd0e1f4f1ff';\n  // const from = '0x5F1c306C70FEE9bD34ED91d862Dc1BA6E268CCBD';\n  // const nonce = 18;\n\n  // const realAddress = ethers.utils.getContractAddress({ from, nonce });\n\n  // console.log('realAddress:', realAddress);\n\n  return (\n    <Box\n      m=\"0 auto\"\n      padding={{ base: \"30px 5px\", md: \"30px 40px\", lg: \"30px 60px\", xl: \"30px 80px\" }}\n      maxWidth=\"1600px\"\n    >\n      <Heading as=\"h1\" size=\"xl\">\n        Create a Challenge\n      </Heading>\n      <VStack spacing={8}>\n        <FormControl mt={45} isRequired isInvalid={titleInvalid}>\n          <FormLabel>Title:</FormLabel>\n          <Input\n            id='title'\n            placeholder='Good titles are short and sweet'\n            value={title}\n            onChange={(e: any) => setTitle(e.target.value)}\n          />\n          {titleInvalid && (\n            <FormErrorMessage>Title is required.</FormErrorMessage>\n          )}\n        </FormControl>\n\n        <FormControl>\n          <FormLabel>Description:</FormLabel>\n          <Textarea\n            id='description'\n            placeholder='Describe the details of your challenge'\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </FormControl>\n\n        <FormControl>\n          <FormLabel>Good Example images:</FormLabel>\n          <Uploader handleChangeStatus={handleChangeStatus} />\n        </FormControl>\n\n        <Grid\n          gap={10}\n          templateColumns='repeat(2, 1fr)'\n          alignSelf=\"flex-start\"\n        >\n          <GridItem colSpan={{ base: 2, md: 1 }}>\n            <FormControl isRequired isInvalid={startDateInvalid}>\n              <FormLabel>Start Date:</FormLabel>\n              <DatePicker\n                showTimeSelect\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                dateFormat=\"MMMM d, yyyy h:mm aa z\"\n                className={colorMode === 'dark' ? styles.darkTheme : styles.lightTheme}\n                minDate={new Date()} // limit to right now\n                maxDate={new Date(new Date().setDate(new Date().getDate() + 365))} // limit to 1 year from now\n              />\n              {startDateInvalid && (\n                <FormErrorMessage>Start date is required and must be before end date.</FormErrorMessage>\n              )}\n            </FormControl>\n          </GridItem>\n\n          <GridItem colSpan={{ base: 2, md: 1 }}>\n            <FormControl isRequired isInvalid={endDateInvalid}>\n              <FormLabel>End Date:</FormLabel>\n              <DatePicker\n                showTimeSelect\n                selected={endDate}\n                onChange={(date) => setEndDate(date)}\n                dateFormat=\"MMMM d, yyyy h:mm aa z\"\n                className={colorMode === 'dark' ? styles.darkTheme : styles.lightTheme}\n                minDate={startDate} // limit to after start date\n                maxDate={new Date(new Date().setDate(new Date().getDate() + 14))} // limit to 2 weeks from now\n              />\n              {endDateInvalid && (\n                <FormErrorMessage>End date is required.</FormErrorMessage>\n              )}\n            </FormControl>\n          </GridItem>\n        </Grid>\n\n        <FormControl isRequired isInvalid={prizeAmountInvalid}>\n          <FormLabel>Prize Amount:</FormLabel>\n          <NumberInput\n            id=\"amount\"\n            maxW={280}\n            min={0}\n            value={prizeAmount}\n            onChange={(valueString) => setPrizeAmount(valueString)}\n          >\n            <HStack>\n              <FaEthereum />\n              <NumberInputField />\n            </HStack>\n          </NumberInput>\n          {!prizeAmountInvalid ? (\n            <FormHelperText ml={7}>Amount is denominated in ETH.</FormHelperText>\n          ) : (\n            <FormErrorMessage>Prize amount is required.</FormErrorMessage>\n          )}\n        </FormControl>\n\n        <Button\n          size=\"lg\"\n          mt={3}\n          colorScheme='teal'\n          // alignSelf=\"flex-start\"\n          isLoading={loading}\n          disabled={loading}\n          type='submit'\n          onClick={handleSubmit}\n        >\n          Create Challenge\n        </Button>\n\n      </VStack>\n    </Box>\n  )\n};\n\nexport default Create;\n","import { Key, useContext, useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  Wrap,\n  WrapItem,\n} from '@chakra-ui/react';\nimport { doc, updateDoc, getDocs, collection, DocumentData } from \"firebase/firestore\";\nimport { useParams } from 'react-router-dom';\nimport { useDb } from '../../hooks/useFirebase';\nimport Card from '../../organsims/DisplaySubmissions/Card';\nimport StoreContext from '../../store/Store/StoreContext';\nimport { ethers } from 'ethers';\n\nconst SelectWinner = () => {\n  const db = useDb();\n  let { id } = useParams();\n  const [appState] = useContext(StoreContext);\n\n  const [fireData, setFireData] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const [selected, setSelected] = useState<string>('');\n  const [loadingWinner, setLoadingWinner] = useState<boolean>(false);\n  const [winnerHasBeenSelected, setWinnerHasBeenSelected] = useState<boolean>(false);\n\n  const getData = async () => {\n    if (typeof id === 'string' && db) {\n      // const docRef = doc(db, \"bounties\", id);\n      // const docSnap = await getDoc(docRef);\n      const docRef = doc(db, \"bounties\", id);\n      const querySnapshot = await getDocs(collection(docRef, \"submissions\"));\n\n      if (querySnapshot) {\n        let tmp: DocumentData[] = []\n        querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          tmp.push(doc.data());\n        });\n        setFireData(tmp);\n        setWinnerHasBeenSelected(tmp.filter((item) => item.winner).length > 0);\n        setLoading(false);\n      } else {\n        console.log(\"No such querySnapshot!\");\n        setLoading(false);\n      }\n    } else {\n      console.log('id is not a string');\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [id, db]);\n\n  if (loading || !fireData) {\n    return null;\n  };\n\n  \n  const handleSubmit = async () => {\n    console.log('handleSubmit');\n    setLoadingWinner(true);\n    if (db && id) {\n      const { txnResponse, txnReceipt } = await appState.client.selectWinner(selected, id);\n      console.log('txnResponse:', txnResponse);\n      console.log('txnReceipt:', txnReceipt);\n      // Upload to firebase\n      const submissionRef = doc(db, \"bounties\", id, \"submissions\", selected);\n      updateDoc(submissionRef, {\n        winner: true,\n      });\n      const bountyRef = doc(db, \"bounties\", id);\n      updateDoc(bountyRef, {\n        winner: submissionRef,\n        winnerSelected: new Date(),\n      });\n    }\n    setLoadingWinner(false);\n  };\n  \n  const handleSelect = (id: any) => {\n    if (selected === id) {\n      setSelected('');\n    } else {\n      setSelected(id);\n    }\n  }\n\n  return (\n    <Box\n      m=\"0 auto\"\n      padding={{ base: \"30px 5px\", md: \"30px 40px\", lg: \"30px 60px\", xl: \"30px 80px\" }}\n      maxWidth=\"1600px\"\n    >\n      <Heading>Select Winner:</Heading>\n      <Box height={30} />\n      <Wrap spacing={5} mt={3} mb={3}>\n        {fireData.map((submission: any) => (\n          <WrapItem\n            onClick={() => handleSelect(submission.id ? submission.id : '')}\n            w={{\n              base: \"100%\",\n              md: \"Calc(50% - 20px)\", // 50% of space minus the 5px of spacing\n              lg: \"Calc(33% - 20px)\", // 33% of space minus the 5px of spacing\n              xl: \"Calc(25% - 20px)\", // 25% of space minus the 5px of spacing\n            }}\n            borderColor={(selected === submission.id || submission.winner) ? 'teal.500' : 'transparent'}\n            borderWidth={(selected === submission.id || submission.winner) ? '3px' : '0px'}\n            borderRadius={8}\n          >\n            <Card\n              key={submission.id}\n              files={submission.files}\n              imageAlt={submission.imageAlt}\n              date={new Date(submission.date.seconds * 1000)}\n              postedBy={submission.postedBy}\n            />\n          </WrapItem>\n        ))}\n      </Wrap>\n      <Box height={10} />\n      {selected !== '' && !fireData.winner && (\n        <Button\n          size='lg'\n          colorScheme=\"teal\"\n          onClick={() => {\n            handleSubmit();\n          }}\n          isLoading={loadingWinner}\n          disabled={loadingWinner}\n        >\n          Submit\n        </Button>\n      )}\n    </Box>\n  )\n};\n\nexport default SelectWinner;\n","import {\n  ChakraProvider,\n  extendTheme,\n  ThemeConfig,\n  Box,\n  Flex,\n} from '@chakra-ui/react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n} from 'react-router-dom'\nimport { initializeApp } from 'firebase/app';\n// import { getFirestore } from \"firebase/firestore\"\nimport 'photoswipe/dist/photoswipe.css'\nimport 'photoswipe/dist/default-skin/default-skin.css'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './app.css';\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\nimport StoreProvider from './store/Store/StoreProvider';\nimport Challenge from \"./pages/Challenge\";\nimport Home from \"./pages/Home\"\nimport NotFound from \"./pages/NotFound\";\nimport Create from './pages/Create';\nimport SelectWinner from './pages/SelectWinner';\n\n\nconst colors = {\n  // brand: {\n  //   900: '#1a365d',\n  //   800: '#153e75',\n  //   700: '#2a69ac',\n  // }\n}\n\n// 2. Add your color mode config\nconst config: ThemeConfig = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false,\n}\n\nconst Border = {\n  variants: {\n    'thin': (props: any) => ({\n      border: '1px solid',\n      borderColor: props.colorMode === 'light' ? 'gray.200' : 'whiteAlpha.300',\n      borderRadius: '8px',\n    }),\n    'thick': (props: any) => ({\n      border: '4px solid',\n      borderColor: props.colorMode === 'light' ? 'gray.200' : 'whiteAlpha.300',\n      borderRadius: '8px',\n    }),\n  },\n  // The default variant value\n  defaultProps: {\n    variant: 'thin',\n  },\n}\n\nconst Text = {\n  variants: {\n    'blackAndWhite': (props: any) => ({\n      color: props.colorMode === 'light' ? 'gray.800' : 'whiteAlpha.800',\n    }),\n    'teal': (props: any) => ({\n      color: props.colorMode === 'light' ? 'teal.500' : 'teal.200',\n    }),\n  },\n  // The default variant value\n  defaultProps: {\n    variant: 'blackAndWhite',\n  },\n}\n\nconst Background = {\n  variants: {\n    'shade': (props: any) => ({\n      backgroundColor: props.colorMode === 'light' ? 'gray.100' : 'whiteAlpha.100',\n    }),\n  },\n  // The default variant value\n  defaultProps: {\n    variant: 'shade',\n  },\n}\n\nconst components = {\n  Border,\n  Text,\n  Background,\n}\n\nconst theme = extendTheme({ config, colors, components })\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  projectId: \"meme-to-earn\",\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n};\n// // Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n// const db = getFirestore();\n\nexport const App = () => (\n  // <StoreProvider>\n    <ChakraProvider theme={theme}>\n      <Router basename=\"/open-work\" >\n        <Box p={3}>\n          <Flex justify=\"end\">\n            <ColorModeSwitcher />\n          </Flex>\n          <Routes>\n            <Route path=\"/\" element={<Home/>}/>\n            <Route path=\"/challenge/:id\" element={<Challenge />}/>\n            <Route path=\"/challenge/:id/select-winner\" element={<SelectWinner />}/>\n            <Route path=\"/create\" element={<Create />}/>\n            <Route path=\"*\" element={<NotFound/>}/>\n          </Routes>\n        </Box>\n      </Router>\n    </ChakraProvider>\n  // </StoreProvider>\n)\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en.json'\nimport ru from 'javascript-time-ago/locale/ru.json'\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nTimeAgo.addDefaultLocale(en)\nTimeAgo.addLocale(ru)\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  // databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET\n}\n\nlet instance = null\nlet db = null\n\nexport default function getFirebase() {\n  if (instance) return instance\n  instance = initializeApp(config)\n  return instance\n}\n\nexport function getDb() {\n  if (db) return db\n  db = getFirestore()\n  return db\n}\n","import { useEffect, useState } from \"react\";\nimport getFirebase, { getDb } from \"../services/firebase\";\n\nexport default function useFirebase() {\n  const [instance, setInstance] = useState(false)\n\n  useEffect(() => {\n    setInstance(!!getFirebase())\n  }, [])\n\n  return instance\n}\n\nexport function useDb() {\n  const [db, setDb] = useState(null);\n\n  useEffect(() => {\n    setDb(getDb())\n  }, [])\n  return db\n}\n"],"sourceRoot":""}