{"version":3,"sources":["pages/Create/styles.module.css","pages/Challenge/Uploader/index.tsx","pages/Create/Uploader/index.tsx","ColorModeSwitcher.tsx","store/Store/StoreReducer.js","services/utils/Utils.js","services/ethers/JsonRPCErrors.js","services/ethers/client.js","store/Store/InitialState.tsx","store/Store/StoreProvider.js","organsims/Footer/index.tsx","atoms/BorderedAccordion/index.tsx","molecules/AccordionDataDisplay/index.tsx","pages/Challenge/Accordions/Description.tsx","pages/Challenge/ImageExamples/index.tsx","pages/Challenge/Accordions/ExampleImages.tsx","atoms/BorderedBox/index.tsx","atoms/ClaimButton/index.tsx","atoms/ConnectWalletButton/index.jsx","molecules/TimeLeft/index.tsx","pages/Challenge/NFTViewer.tsx/index.tsx","pages/Challenge/TopFolder/index.tsx","organsims/DisplaySubmissions/Card.tsx","organsims/DisplaySubmissions/index.tsx","pages/Challenge/index.tsx","assets/images/much_wow.jpeg","pages/Home/index.tsx","pages/NotFound/index.tsx","pages/Create/index.tsx","pages/SelectWinner/index.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx","store/Store/StoreContext.js","services/firebase.js","hooks/useFirebase.js"],"names":["module","exports","client","create","url","Layout","input","previews","submitButton","dropzoneProps","files","maxFiles","extra","length","InputContent","spacing","textAlign","sx","useStyleConfig","variant","fontSize","Uploader","bountyId","refreshData","setLoading","db","useDb","useContext","StoreContext","appState","useState","setFile","urlArr","setUrlArr","readFileAsync","file","Promise","resolve","reject","reader","window","FileReader","readAsArrayBuffer","onloadend","console","log","Buffer","result","onerror","handleSubmit","allFiles","a","makeSubmission","txnResponse","txnReceipt","events","data","tmpArr","i","f","arrayBuffer","add","created","path","prev","src","push","remove","submissionsRef","doc","setDoc","id","date","Date","postedBy","from","error","bdrClr","useColorMode","colorMode","getUploadParams","LayoutComponent","onSubmit","classNames","inputLabelWithFiles","defaultClassNames","inputLabel","styles","dropzone","borderColor","width","position","padding","inputContent","handleChangeStatus","onChangeStatus","maxSizeBytes","SubmitButtonComponent","ColorModeSwitcher","props","toggleColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","color","marginLeft","onClick","icon","StoreReducer","state","action","type","isAuthenticated","payload","publicAddress","provider","signer","Utils","formatDate","createdAt","toDateString","split","slice","join","formatUnixDate","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","parseGitHubUrl","githubUrl","test","pathArray","githubData","URL","pathname","parseInt","formatter","Intl","NumberFormat","style","currency","jsonRpcErrors","title","message","bounty","bountyClosedTime","utils","bountyMintTime","account","require","config","ethers","providers","Web3Provider","ethereum","Client","OpenQ","Contract","OpenQABI","abi","ERC20","tokenAddress","ERC20ABI","promise","send","getSigner","getAddress","myAddress","contract","claimBounty","wait","submissionId","selectWinner","submitMethod","library","uuid","organization","mintBounty","args","issuerAddress","bountyAddress","_callerAddress","_tokenAddress","address","constants","AddressZero","getBalance","volume","balanceOf","_bountyAddress","_value","fundBountyToken","value","jsonRpcError","errorString","includes","revertString","Object","keys","InitialState","tokenMetadata","mumbaiTokenMetadata","tokens","mumbaiTokens","StoreProvider","children","useReducer","dispatch","Provider","Footer","mt","p","href","isExternal","textDecoration","BorderedAccordion","rest","BorderedAccordionItem","borderBottom","borderTop","AccordionDataDisplay","defaultIndex","allowMultiple","flex","fontFamily","pb","Description","description","getThumbBoundsFn","index","thumbnail","document","querySelectorAll","pageYScroll","pageYOffset","documentElement","scrollTop","rect","getBoundingClientRect","x","left","y","top","w","ImageExamples","imgs","options","bgOpacity","mb","overflow","map","item","original","image","imgWidth","height","imgHeight","ref","open","className","alt","ExampleImages","BorderedBox","ClaimButton","isClaiming","setIsClaiming","claim","colorScheme","isLoading","disabled","location","host","origin","ConnectWalletButton","setIsConnecting","setIsConnectingError","setIsConnectingErrorMessage","setIsConnectingErrorCode","setIsConnectingErrorData","connectWallet","catch","code","twoDigits","n","Block","label","alignItems","fontWeight","TimeLeft","renderer","days","base","md","lg","xl","NFTViewer","startDate","endDate","prizeAmount","bg","toUTCString","TopFold","isWinnerSelected","display","ml","align","as","toLocaleString","hour","minute","timeZone","getTime","borderBottomRadius","Card","imageAlt","maxW","borderWidth","borderRadius","letterSpacing","ReactTimeAgo","locale","lineHeight","isTruncated","DisplaySubmissions","useParams","fireData","setFireData","loading","getData","docRef","getDocs","collection","querySnapshot","tmp","forEach","useEffect","submission","MyDivider","Challenge","loadingSubmission","setLoadingSubmission","getDoc","docSnap","exists","examplesImages","winner","m","maxWidth","amount","Home","scene","getElementById","Parallax","relativeInput","bottom","right","minH","justifyContent","direction","marginTop","to","rightIcon","AiOutlineArrowRight","muchWow","sm","NotFound","Create","toast","useToast","navigate","useNavigate","setStartDate","setEndDate","setTitle","setDescription","setPrizeAmount","setFiles","titleInvalid","setTitleInvalid","startDateInvalid","setStartDateInvalid","endDateInvalid","setEndDateInvalid","prizeAmountInvalid","setPrizeAmountInvalid","token","setTransactionHash","fundBounty","parseFloat","volumeInWei","decimals","bigNumberVolumeInWei","BigNumber","toString","approveSucceeded","callerBalance","approve","handleError","fundTxnReceipt","transactionHash","symbol","e","preventDefault","UUID","v4","exampleImages","status","duration","isClosable","isRequired","isInvalid","placeholder","onChange","target","prevFiles","newFiles","filter","meta","gap","templateColumns","alignSelf","colSpan","showTimeSelect","selected","dateFormat","darkTheme","lightTheme","minDate","maxDate","setDate","min","valueString","SelectWinner","setSelected","loadingWinner","setLoadingWinner","setWinnerHasBeenSelected","submissionRef","updateDoc","bountyRef","winnerSelected","handleSelect","components","Border","variants","border","defaultProps","Text","Background","backgroundColor","theme","extendTheme","initialColorMode","useSystemColorMode","colors","App","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","basename","justify","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","hostname","match","TimeAgo","addDefaultLocale","en","addLocale","ru","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","React","createContext","setDb","getFirestore"],"mappings":"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","file":"static/js/main.7c39be74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkTheme\":\"styles_darkTheme__2dOnH\",\"lightTheme\":\"styles_lightTheme__3QYJR\"};","import { useContext, useState } from 'react';\nimport {\n  VStack,\n  Text,\n  useColorMode,\n  useStyleConfig,\n  Flex,\n} from '@chakra-ui/react';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport Dropzone, { defaultClassNames, IDropzoneProps, IFileWithMeta, ILayoutProps } from 'react-dropzone-uploader'\nimport { create } from \"ipfs-http-client\";\nimport 'react-dropzone-uploader/dist/styles.css';\nimport StoreContext from '../../../store/Store/StoreContext';\nimport { useDb } from '../../../hooks/useFirebase';\n\nconst client = create({ url: 'https://ipfs.infura.io:5001/api/v0'});\n\n// add type defs to custom LayoutComponent prop to easily inspect props passed to injected components\nconst Layout = ({ input, previews, submitButton, dropzoneProps, files, extra: { maxFiles } }: ILayoutProps) => {\n  return (\n    <div>\n      {previews}\n\n      <div {...dropzoneProps}>\n        {files.length < maxFiles && input}\n      </div>\n\n      {files.length > 0 && submitButton}\n    </div>\n  )\n}\n\nconst InputContent = () => {\n  return (\n    <VStack spacing={2} textAlign=\"center\">\n      <Text sx={useStyleConfig('Text', { variant: 'teal' })} fontSize=\"3xl\">Drop your meme here 🖐️🎤</Text>\n      <Text\n        sx={useStyleConfig('Text', { variant: 'blackAndWhite' })}\n        fontSize=\"lg\"\n      >\n        (JPG, JPEG, PNG, GIF, SVG, ect.)\n      </Text>\n      <Text\n        sx={useStyleConfig('Text', { variant: 'blackAndWhite' })}\n        fontSize=\"lg\"\n      >\n        Be an open source hero and also include the raw files (PSD, PXD, TIFF, ect.)\n      </Text>\n    </VStack>\n  );\n}\n\n// we need to call submit method(_bountyId)\ninterface UploaderProps {\n  bountyId: string;\n  refreshData: () => void;\n  setLoading?: (isLoading: boolean) => void;\n}\nconst Uploader = ({\n  bountyId,\n  refreshData,\n  setLoading,\n}: UploaderProps) => {\n  const db = useDb();\n  const [appState] = useContext(StoreContext);\n  const [file, setFile] = useState<Buffer | null>(null);\n  const [urlArr, setUrlArr] = useState<any[]>([]);\n\n  function readFileAsync(file: IFileWithMeta):Promise<Buffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file.file);\n  \n      reader.onloadend = () => {\n        console.log(\"Buffer data: \", new Buffer(reader.result as ArrayBuffer));\n        setFile(new Buffer(reader.result as ArrayBuffer));\n        resolve(new Buffer(reader.result as ArrayBuffer));\n      };\n  \n      reader.onerror = reject;\n    })\n  }\n\n  // add type defs to function props to get TS support inside function bodies,\n  // and not just where functions are passed as props into Dropzone\n  const getUploadParams: IDropzoneProps['getUploadParams'] = () => ({ url: 'https://httpbin.org/post' })\n\n  const handleSubmit: IDropzoneProps['onSubmit'] = async (files, allFiles) => {\n    if (setLoading) {\n      setLoading(true);\n    }\n    // send to the bounty contract\n    const result = await appState.client.makeSubmission(bountyId);\n    console.log('result', result);\n    const { txnResponse, txnReceipt } = result;\n    const { events } = txnReceipt;\n    const { data } = events[0];\n    console.log('data', data);\n    console.log('files:', files);\n    console.log('allFiles:', allFiles);\n    let tmpArr = [];\n    for (let i = 0; i < allFiles.length; i++) {\n      const f = allFiles[i];\n      let arrayBuffer = await readFileAsync(f);\n      try {\n        const created = await client.add(arrayBuffer);\n        const url = `https://ipfs.infura.io/ipfs/${created.path}`;\n        console.log('url', url);\n        setUrlArr(prev => [...prev, { src: url }]);\n        tmpArr.push({ src: url });\n      } catch (error) {\n        console.log(error);\n      }\n      f.remove() \n    } // end for loop\n    try {\n      console.log('urlArr', urlArr);\n      if (db) {\n        const submissionsRef = doc(db, \"bounties\", bountyId, \"submissions\", data);\n        setDoc(submissionsRef, {\n          id: data,\n          date: new Date(),\n          files: tmpArr,\n          postedBy: txnReceipt.from,\n        });\n      } else { console.log('error no db') }\n    } catch (error) {\n      console.log('error uploading to firebase', error);\n    }\n    refreshData();\n    if (setLoading) {\n      setLoading(false);\n    }\n  }\n  \n  const { colorMode } = useColorMode()\n  const bdrClr = colorMode === 'light' ? \"#E2E8F0\" : \"#ffffff29\";\n\n  return (\n    <Dropzone\n      getUploadParams={getUploadParams}\n      LayoutComponent={Layout}\n      onSubmit={handleSubmit}\n      classNames={{\n        inputLabelWithFiles: defaultClassNames.inputLabel\n      }}\n      styles={{\n        dropzone: { borderColor: bdrClr, width: '100%' },\n        inputLabel: { position: 'relative', padding: \"80px 30px\" , width: '100%' },\n      }}\n      inputContent={<InputContent />}\n    />\n  )\n}\n\nexport default Uploader;\n","import { useState } from 'react';\nimport {\n  VStack,\n  Text,\n  useColorMode,\n  useStyleConfig,\n  Flex,\n} from '@chakra-ui/react';\nimport Dropzone, { defaultClassNames, getFilesFromEvent, IDropzoneProps, IFileWithMeta, ILayoutProps, StatusValue } from 'react-dropzone-uploader'\nimport { create } from \"ipfs-http-client\";\nimport 'react-dropzone-uploader/dist/styles.css';\n\nconst client = create({ url: 'https://ipfs.infura.io:5001/api/v0'});\n\n// add type defs to custom LayoutComponent prop to easily inspect props passed to injected components\nconst Layout = ({ input, previews, submitButton, dropzoneProps, files, extra: { maxFiles } }: ILayoutProps) => {\n  return (\n    <div>\n      {previews}\n\n      <div {...dropzoneProps}>\n        {files.length < maxFiles && input}\n      </div>\n\n      {files.length > 0 && submitButton}\n    </div>\n  )\n}\n\nconst InputContent = () => {\n  return (\n    <VStack spacing={2} textAlign=\"center\">\n      <Text sx={useStyleConfig('Text', { variant: 'blackAndWhite' })} fontSize=\"xl\">Drop your examples here</Text>\n    </VStack>\n  );\n}\n\ninterface UploaderProps {\n  handleChangeStatus: (file: IFileWithMeta, status: StatusValue, allFiles: IFileWithMeta[]) => void | { meta: { [name: string]: any; }; }\n};\nconst Uploader = ({\n  handleChangeStatus,\n}: UploaderProps) => {\n  const [file, setFile] = useState<Buffer | null>(null);\n  const [urlArr, setUrlArr] = useState<any[]>([]);\n\n  function readFileAsync(file: IFileWithMeta):Promise<Buffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file.file);\n  \n      reader.onloadend = () => {\n        console.log(\"Buffer data: \", new Buffer(reader.result as ArrayBuffer));\n        setFile(new Buffer(reader.result as ArrayBuffer));\n        resolve(new Buffer(reader.result as ArrayBuffer));\n      };\n  \n      reader.onerror = reject;\n    })\n  }\n\n  // add type defs to function props to get TS support inside function bodies,\n  // and not just where functions are passed as props into Dropzone\n  const getUploadParams: IDropzoneProps['getUploadParams'] = () => ({ url: 'https://httpbin.org/post' })\n\n  const handleSubmit: IDropzoneProps['onSubmit'] = async (files, allFiles) => {\n    for (let i = 0; i < allFiles.length; i++) {\n      const f = allFiles[i];\n      let arrayBuffer = await readFileAsync(f);\n      try {\n        const created = await client.add(arrayBuffer);\n        const url = `https://ipfs.infura.io/ipfs/${created.path}`;\n        console.log('url', url);\n        setUrlArr(prev => [...prev, url]);    \n      } catch (error) {\n        console.log(error);\n      }\n      f.remove() \n    }\n  }\n  \n  const { colorMode } = useColorMode()\n  const bdrClr = colorMode === 'light' ? \"#E2E8F0\" : \"#ffffff29\";\n\n  return (\n    <Dropzone\n      onChangeStatus={handleChangeStatus}\n      getUploadParams={getUploadParams}\n      LayoutComponent={Layout}\n      onSubmit={handleSubmit}\n      classNames={{\n        inputLabelWithFiles: defaultClassNames.inputLabel\n      }}\n      styles={{\n        dropzone: { borderColor: bdrClr, width: '100%' },\n        inputLabel: { position: 'relative', padding: \"50px 0px\" , width: '100%' },\n      }}\n      inputContent={<InputContent />}\n      maxSizeBytes={1000000}\n      maxFiles={15}\n      SubmitButtonComponent={() => null}\n    />\n  )\n}\n\nexport default Uploader;\n","import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","const StoreReducer = (state, action) => {\n\tswitch (action.type) {\n\tcase 'UPDATE_IS_AUTHENTICATED':\n\t\treturn {\n\t\t\t...state,\n\t\t\tisAuthenticated: action.payload,\n\t\t};\n\tcase 'UPDATE_ADDRESS':\n\t\treturn {\n\t\t\t...state,\n\t\t\tpublicAddress: action.payload,\n\t\t};\n\tcase 'PROVIDER':\n\t\treturn {\n\t\t\t...state,\n\t\t\tprovider: action.payload,\n\t\t};\n\tcase 'SIGNER':\n\t\treturn {\n\t\t\t...state,\n\t\t\tsigner: action.payload,\n\t\t};\n\tdefault:\n\t\treturn state;\n\t}\n};\n\nexport default StoreReducer;\n","class Utils {\n\tconstructor() { }\n\n\tformatDate = (createdAt) => {\n\t\tconst rawDate = createdAt;\n\t\tconst date = new Date(rawDate);\n\t\treturn date.toDateString().split(' ').slice(1).join(' ');\n\t};\n\n\tformatUnixDate = (createdAt) => {\n\t\tvar date = new Date(createdAt);\n\n\t\tvar day = date.getDate();\n\t\tvar month = date.getMonth();\n\t\tvar year = date.getFullYear();\n\n\t\t// Hours part from the timestamp\n\t\tvar hours = date.getHours();\n\t\t// Minutes part from the timestamp\n\t\tvar minutes = '0' + date.getMinutes();\n\t\t// Seconds part from the timestamp\n\t\tvar seconds = '0' + date.getSeconds();\n\n\t\t// Will display time in 10:30:23 format\n\t\tvar formattedTime = `${month}/${day}/${year} at ${hours}:${minutes.substr(-2) + ':' + seconds.substr(-2)}`;\n\t\treturn formattedTime;\n\t};\n\n\tparseGitHubUrl = (githubUrl) => {\n\t\tconst pattern = /https?:\\/\\/github\\.com\\/(?:[^\\/\\s]+\\/)+(?:issues\\/\\d+)/;\n\t\tif (!pattern.test(githubUrl)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet url;\n\t\tlet pathArray = [];\n\t\tlet githubData = [];\n\n\t\ttry {\n\t\t\turl = new URL(githubUrl);\n\t\t\tpathArray = url.pathname.split('/');\n\t\t} catch (error) {\n\t\t\treturn githubData;\n\t\t}\n\t\t// orgName\n\t\tgithubData.push(pathArray[1]);\n\n\t\t// repoName\n\t\tgithubData.push(pathArray[2]);\n\n\t\t// issueId\n\t\tgithubData.push(parseInt(pathArray[4]));\n\n\t\treturn githubData;\n\t};\n\n\tformatter = new Intl.NumberFormat('en-US', {\n\t\tstyle: 'currency',\n\t\tcurrency: 'USD',\n\t});\n}\n\nexport default Utils;","// import { formatUnixDate } from '../utils/Utils';\nimport utils from '../utils/Utils';\n\n/**\n\t * Each method contains a tuple of { CONTRACT_THROWN_REVERT_STRING : USER_FRIENDLY ERROR MESSAGE }\n\t */\nconst jsonRpcErrors =\n\t[\n\t\t// MINT\n\t\t{\n\t\t\t'ERC1167: create2 failed': {\n\t\t\t\ttitle: 'Bounty already exists',\n\t\t\t\tmessage: () => {\n\t\t\t\t\treturn 'A bounty for that issue already exists';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// FUND\n\t\t{\n\t\t\t'FUNDING_CLOSED_BOUNTY': {\n\t\t\t\ttitle: 'Cannot fund a closed bounty',\n\t\t\t\tmessage: ({ bounty }) => {\n\t\t\t\t\treturn `Bounty was closed on ${bounty.bountyClosedTime}`;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t'ZERO_VOLUME_SENT': {\n\t\t\t\ttitle: 'Zero Volume Sent',\n\t\t\t\tmessage: () => {\n\t\t\t\t\treturn 'Must send a greater than 0 volume of tokens.';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t'ERC20: transfer amount exceeds balance': {\n\t\t\t\ttitle: 'Transfer amount exceeds balance',\n\t\t\t\tmessage: () => {\n\t\t\t\t\treturn 'Transfer amount exceeds balance';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t'NONCE_TO_HIGH': {\n\t\t\t\ttitle: 'Nonce Too High',\n\t\t\t\tmessage: () => {\n\t\t\t\t\treturn 'Nonce too high. If developing locally, Go to MetaMask -> Accounts -> Settings -> Advanced -> Reset Account';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// REFUND\n\t\t{\n\t\t\t'BOUNTY_ALREADY_REFUNDED': {\n\t\t\t\ttitle: 'Bounty Already Refunded',\n\t\t\t\tmessage: () => {\n\t\t\t\t\treturn 'Bounty was already refunded';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t'PREMATURE_REFUND_REQUEST': {\n\t\t\t\ttitle: 'Too early to withdraw funds',\n\t\t\t\tmessage: ({ bounty }) => {\n\t\t\t\t\treturn `Bounty was minted on ${utils.formatUnixDate(bounty.bountyMintTime)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t'ONLY_FUNDERS_CAN_REQUEST_REFUND': {\n\t\t\t\ttitle: 'Not a Funder',\n\t\t\t\tmessage: ({ account }) => `Only funders can request refunds on this issue. Your address ${account} has not funded this issue.`\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t'REFUNDING_CLOSED_BOUNTY': {\n\t\t\t\ttitle: 'Cannot request refund on a closed bounty',\n\t\t\t\tmessage: () => 'You are requesting on a closed bounty'\n\t\t\t}\n\t\t},\n\t\t// CLAIM\n\t\t{\n\t\t\t'CLAIMING_CLOSED_BOUNTY': {\n\t\t\t\ttitle: 'Cannot claim a closed bounty',\n\t\t\t\tmessage: () => 'You are attempting to claim a closed bounty'\n\t\t\t}\n\t\t},\n\t\t// MISCELLANEOUS\n\t\t{\n\t\t\t'USER_DENIED_TRANSACTION': {\n\t\t\t\ttitle: 'User Denied Transaction',\n\t\t\t\tmessage: () => {\n\t\t\t\t\treturn 'Thank You! Come Again!';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t];\n\n\nexport default jsonRpcErrors;","import { ethers } from 'ethers';\nimport OpenQABI from '../../artifacts/contracts/OpenQ/Implementations/OpenQV0.sol/OpenQV0.json';\nimport ERC20ABI from '../../artifacts/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json';\nimport jsonRpcErrors from './JsonRPCErrors';\nrequire('dotenv').config();\n\n// A Web3Provider wraps a standard Web3 provider, which is\n// what MetaMask injects as window.ethereum into each page\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\n\nclass Client {\n\tconstructor() { }\n\n\t/**\n\t\t * \n\t\t * @param {Web3Provider} signer An ethers.js signer\n\t\t * @returns Web3Contract\n\t\t */\n\tOpenQ = (signer) => {\n\t\t// console.log('process.env.OPENQ_ADDRESS', process.env.OPENQ_ADDRESS);\n\t\t// const contract = new ethers.Contract('0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e', OpenQABI.abi, signer);\n    // const contract = new ethers.Contract('0xBC9129Dc0487fc2E169941C75aABC539f208fb01', OpenQABI.abi, signer);\n    // const contract = new ethers.Contract('0x3450C64A1A3561A41AEF1ec4Ad949519C8dA1708', OpenQABI.abi, signer); // working for fundBonty\n\t\t// const contract = new ethers.Contract('0x75eea904e83c81c32B33eAc833e3A742e6c6dd7b', OpenQABI.abi, signer); // added event\n\t\tconst contract = new ethers.Contract('0x832A08D6a6375B66919B00acCfcbB5dC44cb3E64', OpenQABI.abi, signer); // local\n\t\treturn contract;\n\t};\n\n\t/**\n\t\t * \n\t\t * @param {string} tokenAddress Contract address of an ERC20 token\n\t\t * @param {Web3Provider} signer An ethers.js signer\n\t\t * @returns Web3Contract\n\t\t */\n\tERC20 = (tokenAddress, signer) => {\n\t\tconst contract = new ethers.Contract(tokenAddress, ERC20ABI.abi, signer);\n\t\treturn contract;\n\t};\n\n\tasync claimBounty(bountyId) {\n\t\tconst promise = new Promise(async (resolve, reject) => {\n\t\t\t// const signer = library.getSigner();\n\t\t\t// MetaMask requires requesting permission to connect users accounts\n\t\t\tawait provider.send(\"eth_requestAccounts\", []);\n\t\t\t// const address = await provider.listAccounts()\n\n\t\t\t// The MetaMask plugin also allows signing transactions to\n\t\t\t// send ether and pay to change state within the blockchain.\n\t\t\t// For this, you need the account signer...\n\t\t\tconst signer = provider.getSigner();\n\t\t\tconsole.log('signer', signer);\n\n\t\t\tconst myAddress = await signer.getAddress();\n\n\t\t\tconsole.log('account:', myAddress);\n\n\t\t\tconst contract = this.OpenQ(signer);\n\t\t\tconsole.log('contract', contract);\n\t\t\ttry {\n\t\t\t\tconst txnResponse = await contract.claimBounty(bountyId, myAddress);\n\t\t\t\tconst txnReceipt = await txnResponse.wait();\n\t\t\t\tresolve({ txnReceipt, txnResponse });\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t\treturn promise;\n\t}\n\n\tasync selectWinner(submissionId, bountyId) {\n\t\tconst promise = new Promise(async (resolve, reject) => {\n\t\t\t// const signer = library.getSigner();\n\t\t\t// MetaMask requires requesting permission to connect users accounts\n\t\t\tawait provider.send(\"eth_requestAccounts\", []);\n\n\t\t\t// The MetaMask plugin also allows signing transactions to\n\t\t\t// send ether and pay to change state within the blockchain.\n\t\t\t// For this, you need the account signer...\n\t\t\tconst signer = provider.getSigner();\n\n\t\t\tconst contract = this.OpenQ(signer);\n\t\t\tconsole.log('contract', contract);\n\t\t\ttry {\n\t\t\t\tconst txnResponse = await contract.selectWinner(submissionId, bountyId);\n\t\t\t\tconst txnReceipt = await txnResponse.wait();\n\n\t\t\t\tresolve({ txnReceipt, txnResponse });\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t\treturn promise;\n\t}\n\n\tasync makeSubmission(bountyId) {\n\t\tconst promise = new Promise(async (resolve, reject) => {\n\t\t\t// const signer = library.getSigner();\n\t\t\t// MetaMask requires requesting permission to connect users accounts\n\t\t\tawait provider.send(\"eth_requestAccounts\", []);\n\n\t\t\t// The MetaMask plugin also allows signing transactions to\n\t\t\t// send ether and pay to change state within the blockchain.\n\t\t\t// For this, you need the account signer...\n\t\t\tconst signer = provider.getSigner();\n\n\t\t\tconst contract = this.OpenQ(signer);\n\t\t\tconsole.log('contract', contract);\n\t\t\ttry {\n\t\t\t\tconst txnResponse = await contract.submitMethod(bountyId);\n\t\t\t\tconst txnReceipt = await txnResponse.wait();\n\n\t\t\t\tresolve({ txnReceipt, txnResponse });\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t\treturn promise;\n\t}\n\n\n\tasync mintBounty(library, uuid, organization) {\n\t\tconst promise = new Promise(async (resolve, reject) => {\n\t\t\t// const signer = library.getSigner();\n\t\t\t// MetaMask requires requesting permission to connect users accounts\n\t\t\tawait provider.send(\"eth_requestAccounts\", []);\n\n\t\t\t// The MetaMask plugin also allows signing transactions to\n\t\t\t// send ether and pay to change state within the blockchain.\n\t\t\t// For this, you need the account signer...\n\t\t\tconst signer = provider.getSigner();\n\n\t\t\t// console.log('library', library);\n\t\t\t// const signer = library.getSigner();\n\t\t\tconsole.log('signer', signer);\n\n\t\t\tconst contract = this.OpenQ(signer);\n\t\t\tconsole.log('contract', contract);\n\t\t\ttry {\n\t\t\t\tconst txnResponse = await contract.mintBounty(uuid, 'organization');\n\t\t\t\tconsole.log('txnResponse', txnResponse);\n\t\t\t\tconst txnReceipt = await txnResponse.wait();\n\t\t\t\tconsole.log('txnReceipt', txnReceipt);\n\n\t\t\t\tconst bountyId = txnReceipt.events[0].args.bountyId;\n\t\t\t\tconsole.log('bountyId', bountyId);\n\t\t\t\tconst issuerAddress = txnReceipt.events[0].args.issuerAddress;\n\t\t\t\tconsole.log('issuerAddress', issuerAddress);\n\t\t\t\tconst bountyAddress = txnReceipt.events[0].args.bountyAddress;\n\t\t\t\tconsole.log('bountyAddress', bountyAddress);\n\t\t\t\tconsole.log('txnReceipt.events', txnReceipt.events);\n\t\t\t\tresolve({ bountyId, issuerAddress, bountyAddress, txnReceipt, txnResponse });\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t\treturn promise;\n\t}\n\n\t// \tasync approve(library, _bountyAddress, _tokenAddress, _value) {\n\t// \t\tconst promise = new Promise(async (resolve, reject) => {\n\t// \t\t\tconst signer = library.getSigner();\n\n\t// \t\t\tconst contract = this.ERC20(_tokenAddress, signer);\n\t// \t\t\ttry {\n\t// \t\t\t\tconst txnResponse = await contract.approve(_bountyAddress, _value);\n\t// \t\t\t\tconst txnReceipt = await txnResponse.wait();\n\t// \t\t\t\tresolve(txnReceipt);\n\t// \t\t\t} catch (error) {\n\t// \t\t\t\treject(error);\n\t// \t\t\t}\n\t// \t\t});\n\t// \t\treturn promise;\n\t// \t}\n\n\tasync balanceOf(library, _callerAddress, _tokenAddress) {\n\t\tconst promise = new Promise(async (resolve, reject) => {\n\t\t\t// const signer = library.getSigner(); // using MetaMask\n\n\t\t\t// MetaMask requires requesting permission to connect users accounts\n\t\t\tawait provider.send(\"eth_requestAccounts\", []);\n\n\t\t\t// The MetaMask plugin also allows signing transactions to\n\t\t\t// send ether and pay to change state within the blockchain.\n\t\t\t// For this, you need the account signer...\n\t\t\tconst signer = provider.getSigner();\n\n\t\t\tconst address = await signer.getAddress();\n\n\t\t\tconst contract = this.ERC20(_tokenAddress, signer);\n\t\t\ttry {\n\t\t\t\tlet volume;\n\t\t\t\tif (_tokenAddress == ethers.constants.AddressZero) {\n\t\t\t\t\tvolume = await provider.getBalance(address);\n\t\t\t\t} else {\n\t\t\t\t\tvolume = await contract.balanceOf(address);\n\t\t\t\t}\n\t\t\t\tresolve(volume);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t\treturn promise;\n\t}\n\n\tasync fundBounty(library, _bountyAddress, _tokenAddress, _value) {\n\t\tconst promise = new Promise(async (resolve, reject) => {\n\t\t\t// const signer = library.getSigner();\n\n\t\t\t// MetaMask requires requesting permission to connect users accounts\n\t\t\tawait provider.send(\"eth_requestAccounts\", []);\n\n\t\t\t// The MetaMask plugin also allows signing transactions to\n\t\t\t// send ether and pay to change state within the blockchain.\n\t\t\t// For this, you need the account signer...\n\t\t\tconst signer = provider.getSigner();\n\n\t\t\tconst contract = this.OpenQ(signer);\n\t\t\tconsole.log('contract', contract);\n\t\t\ttry {\n\t\t\t\tlet txnResponse;\n\t\t\t\tlet txnReceipt;\n\n\t\t\t\tif (_tokenAddress == ethers.constants.AddressZero) {\n\t\t\t\t\ttxnResponse = await contract.fundBountyToken(_bountyAddress, _tokenAddress, _value, 1, { value: _value });\n\t\t\t\t} else {\n\t\t\t\t\ttxnResponse = await contract.fundBountyToken(_bountyAddress, _tokenAddress, _value, 1);\n\t\t\t\t}\n\n\t\t\t\tconsole.log('txnResponse', txnResponse);\n\t\t\t\ttxnReceipt = await txnResponse.wait();\n\t\t\t\tresolve(txnReceipt);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('error funding bounty', error);\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t\treturn promise;\n\t}\n\n\t// \tasync refundDeposit(library, _bountyAddress, _depositId) {\n\t// \t\tconst promise = new Promise(async (resolve, reject) => {\n\t// \t\t\tconst signer = library.getSigner();\n\t// \t\t\tconst contract = this.OpenQ(signer);\n\t// \t\t\ttry {\n\t// \t\t\t\tconst txnResponse = await contract.refundDeposit(_bountyAddress, _depositId);\n\t// \t\t\t\tconst txnReceipt = await txnResponse.wait();\n\t// \t\t\t\tresolve(txnReceipt);\n\t// \t\t\t} catch (err) {\n\t// \t\t\t\treject(err);\n\t// \t\t\t}\n\t// \t\t});\n\t// \t\treturn promise;\n\t// \t}\n\n\thandleError(jsonRpcError, data) {\n\t\tlet errorString = jsonRpcError?.data?.message;\n\t\tconsole.log(errorString);\n\t\tconsole.log(jsonRpcError);\n\t\tif (jsonRpcError.message.includes('Nonce too high.')) { errorString = 'NONCE_TO_HIGH'; }\n\t\tif (jsonRpcError.message.includes('User denied transaction signature')) { errorString = 'USER_DENIED_TRANSACTION'; }\n\t\tfor (const error of jsonRpcErrors) {\n\t\t\tconst revertString = Object.keys(error)[0];\n\t\t\tif (errorString.includes(revertString)) {\n\t\t\t\tconst title = error[revertString]['title'];\n\t\t\t\tconst message = error[revertString].message(data);\n\t\t\t\treturn { title, message };\n\t\t\t}\n\t\t}\n\t\treturn 'Unknown Error';\n\t}\n\n}\n\nexport default Client;\n","// import Utils from '../../services/utils/Utils';\n\nimport client from '../../services/ethers/client';\n// import SubgraphClient from '../../services/subgraph/SubgraphClient';\n// import GithubRepository from '../../services/github/GithubRepository';\n// import TokenClient from '../../services/coins/TokenClient';\n\n// import MockGithubRepository from '../../services/github/MockGithubRepository';\n// import Mockclient from '../../services/ethers/Mockclient';\n// import MockOpenQSubgraphClient from '../../services/subgraph/MockOpenQSubgraphClient';\n// import MockTokenClient from '../../services/coins/MockTokenClient';\n\n// // Token Metadata\n// // Array of all supported tokens\n// import polygonMainnetTokens from '../../constants/polygon-mainnet-tokens.json';\nimport mumbaiTokens from '../../constants/polygon-mumbai-tokens.json';\nimport localTokens from '../../constants/local-tokens.json';\n\n// // Mapping of tokens with token metadata for token address lookup\n// import polygonMainnetTokenMetadata from '../../constants/polygon-mainnet.json';\nimport mumbaiTokenMetadata from '../../constants/polygon-mumbai.json';\nimport localTokenMetadata from '../../constants/local.json';\n\n// console.log('process.env.DEPLOY_ENV:', process.env.DEPLOY_ENV);\n// process.env.DEPLOY_ENV = 'development';\nlet InitialState = {};\nlet enviro = 'development';\nswitch (enviro) { // process.env.DEPLOY_ENV\ncase 'local':\n\tInitialState = {\n\t\ttokenMetadata: localTokenMetadata,\n\t\ttokens: localTokens,\n\t\tclient: new client(),\n\t\t// githubRepository: new MockGithubRepository(),\n\t\t// openQSubgraphClient: new MockOpenQSubgraphClient(),\n\t\t// tokenClient: new MockTokenClient(),\n\t\t// utils: new Utils(),\n\t};\n\tbreak;\n// case 'docker':\n// \tInitialState = {\n// \t\ttokenMetadata: localTokenMetadata,\n// \t\ttokens: localTokens,\n// \t\tclient: new client(),\n// \t\tgithubRepository: new GithubRepository(),\n// \t\topenQSubgraphClient: new OpenQSubgraphClient(),\n// \t\ttokenClient: new TokenClient(),\n// \t\tutils: new Utils(),\n// \t};\n// \tbreak;\ncase 'development':\n\tInitialState = {\n\t\ttokenMetadata: mumbaiTokenMetadata,\n\t\ttokens: mumbaiTokens,\n\t\tclient: new client(),\n\t\t// githubRepository: new GithubRepository(),\n\t\t// subgraphClient: new SubgraphClient(),\n\t\t// tokenClient: new TokenClient(),\n\t\t// utils: new Utils(),\n\t};\n\tbreak;\n// case 'staging':\n// \tInitialState = {\n// \t\ttokenMetadata: polygonMainnetTokenMetadata,\n// \t\ttokens: polygonMainnetTokens,\n// \t\tclient: new client(),\n// \t\tgithubRepository: new GithubRepository(),\n// \t\topenQSubgraphClient: new OpenQSubgraphClient(),\n// \t\ttokenClient: new TokenClient(),\n// \t\tutils: new Utils(),\n// \t};\n// \tbreak;\n// case 'production':\n// \tInitialState = {\n// \t\ttokenMetadata: polygonMainnetTokenMetadata,\n// \t\ttokens: polygonMainnetTokens,\n// \t\tclient: new client(),\n// \t\tgithubRepository: new GithubRepository(),\n// \t\ttokenClient: new TokenClient(),\n// \t\tutils: new Utils(),\n// \t};\n// \tbreak;\ndefault:\n\tthrow Error('ENVIRONMENT NOT CONFIGURED CORRECTLY. Set an environment with DEPLOY_ENV');\n}\n\nexport default InitialState;","import React, { useReducer } from 'react';\nimport StoreReducer from './StoreReducer';\nimport StoreContext from './StoreContext';\nimport InitialState from './InitialState';\n\nconst StoreProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer(StoreReducer, InitialState);\n\n\treturn (\n\t\t<StoreContext.Provider value={[state, dispatch]}>\n\t\t\t{children}\n\t\t</StoreContext.Provider>\n\t);\n};\n\nexport default StoreProvider;\n","import {\n  Text,\n  Link,\n  VStack,\n} from '@chakra-ui/react';\n\nconst Footer = () => {\n  return (\n    <VStack mt={7} p={10} textAlign=\"center\">\n      <Text>\n        We ❤️ open source (duh).\n      </Text>\n      <Text>\n        View or contribute to our code on{' '}\n        <Link\n          href=\"https://github.com/kylekaplan/open-work\"\n          isExternal\n          textDecoration=\"underline\"\n        >\n          Github\n        </Link>\n        {'.'}\n      </Text>\n    </VStack>\n  )\n}\n\nexport default Footer;\n","import {\n  Accordion,\n  AccordionItem,\n  AccordionButton as BorderedAccordionButton,\n  AccordionIcon as BorderedAccordionIcon,\n  AccordionPanel as BorderedAccordionPanel,\n  useStyleConfig,\n} from '@chakra-ui/react'\n\nfunction BorderedAccordion(props: any) {\n  const { variant, ...rest } = props\n\n  const styles = useStyleConfig('Border', { variant })\n  console.log('styles', styles)\n\n  return <Accordion sx={styles} {...rest} />\n}\n\nfunction BorderedAccordionItem(props: any) {\n  const { variant, ...rest } = props\n\n  return <AccordionItem borderBottom={0} borderTop={0} {...rest} />\n}\n\nexport {\n  BorderedAccordion,\n  BorderedAccordionItem,\n  BorderedAccordionButton,\n  BorderedAccordionIcon,\n  BorderedAccordionPanel,\n};\n\nexport default BorderedAccordion\n","import { Box, HStack, Text, useStyleConfig } from '@chakra-ui/react';\nimport {\n  BorderedAccordion,\n  BorderedAccordionButton,\n  BorderedAccordionItem,\n  BorderedAccordionPanel,\n  BorderedAccordionIcon,\n} from '../../atoms/BorderedAccordion';\n\ninterface AccordionDataDisplayProps {\n  title: string;\n  icon?: JSX.Element;\n  children: React.ReactNode;\n}\nconst AccordionDataDisplay = ({\n  title,\n  icon,\n  children,\n}: AccordionDataDisplayProps) => (\n  <BorderedAccordion width=\"100%\" defaultIndex={[0]} allowMultiple>\n    <BorderedAccordionItem>\n      <h2>\n        <BorderedAccordionButton>\n          <Box\n            flex='1'\n            fontSize=\"lg\"\n            fontFamily=\"'Poppins', sans-serif\"\n          >\n            <HStack spacing={2}>\n              {icon}\n              <Text>{title}</Text>\n            </HStack>\n          </Box>\n          <BorderedAccordionIcon />\n        </BorderedAccordionButton>\n      </h2>\n      <BorderedAccordionPanel\n        pb={4}\n        sx={useStyleConfig('Background')}\n      >\n        {children}\n      </BorderedAccordionPanel>\n    </BorderedAccordionItem>\n  </BorderedAccordion>\n)\n\nexport default AccordionDataDisplay;\n","import { Text } from '@chakra-ui/react';\nimport { AiOutlineAlignLeft } from 'react-icons/ai';\nimport AccordionDataDisplay from '../../../molecules/AccordionDataDisplay';\n\ninterface DescriptionProps {\n  description: string;\n}\nconst Description = ({\n  description,\n}: DescriptionProps) => (\n  <AccordionDataDisplay\n      title=\"Description\"\n      icon={<AiOutlineAlignLeft />}\n    >\n      <Text fontSize=\"lg\">\n        {description}\n      </Text>\n  </AccordionDataDisplay>\n)\n\nexport default Description;\n","import {\n  HStack,\n  Image,\n} from '@chakra-ui/react';\nimport { Gallery, Item } from 'react-photoswipe-gallery';\n\nconst getThumbBoundsFn = (index: number) => {\n\n  // find thumbnail element\n  var thumbnail = document.querySelectorAll('.thumbnails')[index];\n\n  // get window scroll Y\n  var pageYScroll = window.pageYOffset || document.documentElement.scrollTop; \n  // optionally get horizontal scroll\n\n  // get position of element relative to viewport\n  var rect = thumbnail.getBoundingClientRect(); \n\n  // w = width\n  return {x:rect.left, y:rect.top + pageYScroll - 3, w:rect.width};\n\n\n  // Good guide on how to get element coordinates:\n  // http://javascript.info/tutorial/coordinates\n}\n\ninterface ImageExamplesProps {\n  imgs: { image: string, thumbnail: string, imgWidth: number, imgHeight: number }[]\n}\nconst ImageExamples = ({ imgs }: ImageExamplesProps) => {\n  return (\n    <Gallery\n      options={{ bgOpacity: 0.8, getThumbBoundsFn: getThumbBoundsFn }}\n    >\n      <HStack mt={2} mb={1} overflow=\"scroll\">\n        {imgs.map((item) => (\n          <Item\n            key={item.image}\n            original={item.image}\n            thumbnail={item.thumbnail}\n            width={item.imgWidth}\n            height={item.imgHeight} \n          >\n            {({ ref, open }) => (\n              <Image\n                ref={ref as React.MutableRefObject<HTMLImageElement>}\n                onClick={open}\n                src={item.thumbnail}\n                className=\"thumbnails\"\n                alt=\"\"\n              />\n            )}\n          </Item>\n        ))}\n      </HStack>\n    </Gallery>\n  )\n}\n\nexport default ImageExamples;\n","import { FaClipboardCheck } from 'react-icons/fa';\nimport AccordionDataDisplay from \"../../../molecules/AccordionDataDisplay\";\nimport ImageExamples from '../ImageExamples';\nimport img1 from '../../../assets/images/ultra-sound-money/1.jpeg'\nimport img2 from '../../../assets/images/ultra-sound-money/2.jpeg'\nimport img1Thumbnail from '../../../assets/images/ultra-sound-money/1thumbnail.jpeg';\nimport img2Thumbnail from '../../../assets/images/ultra-sound-money/2thumbnail.jpeg';\n\n// const imgs = [\n//   {\n//     thumbnail: img1Thumbnail,\n//     image: img1,\n//     imgWidth: 508,\n//     imgHeight: 491,\n//   },\n//   {\n//     thumbnail: img2Thumbnail,\n//     image: img2,\n//     imgWidth: 2702,\n//     imgHeight: 1514,\n//   },\n// ];\n\ninterface ImageExamplesProps {\n  imgs: {\n    image: string;\n    thumbnail: string;\n    imgWidth: number;\n    imgHeight: number;\n  }[]\n}\nconst ExampleImages = ({\n  imgs,\n}: ImageExamplesProps) => {\n  return (\n    <AccordionDataDisplay\n      title=\"Example Images\"\n      icon={<FaClipboardCheck />}\n    >\n      <ImageExamples imgs={imgs} />\n    </AccordionDataDisplay>\n  );\n};\n\nexport default ExampleImages;","import { Box, useStyleConfig } from '@chakra-ui/react'\n\nfunction BorderedBox(props: any) {\n  const { variant, ...rest } = props\n\n  const styles = useStyleConfig('Border', { variant })\n\n  // Pass the computed styles into the `__css` prop\n  return <Box sx={styles} {...rest} />\n}\n\nexport default BorderedBox\n","import { useContext, useState } from 'react';\nimport {\n  Button,\n} from '@chakra-ui/react';\nimport StoreContext from '../../store/Store/StoreContext';\n\ninterface ClaimButtonProps {\n  bountyId: string;\n}\nconst ClaimButton = ({\n  bountyId,\n}: ClaimButtonProps) => {\n    const [isClaiming, setIsClaiming] = useState(false);\n    const [appState] = useContext(StoreContext);\n    \n    const claim = async () => {\n      console.log('claiming bounty');\n      setIsClaiming(true);\n      try {\n        const result = await appState.client.claimBounty(bountyId);\n        console.log('result:', result);\n      }\n      catch (error) {\n        console.log('error', error);\n      }\n      setIsClaiming(false);\n    };\n\n    return (\n      <>\n        <Button\n          colorScheme=\"teal\"\n          mt={4}\n          onClick={claim}\n          isLoading={isClaiming}\n          disabled={isClaiming}\n        >\n          Claim Bounty\n        </Button>\n      </>\n    );\n};\n\nexport default ClaimButton;\n","import { useState } from 'react';\nimport {\n  Button,\n} from '@chakra-ui/react';\nimport { ethers } from 'ethers';\nimport { SiweMessage } from 'siwe';\n\nconst domain = window.location.host;\nconst origin = window.location.origin;\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = provider.getSigner();\n\nconst ConnectWalletButton = () => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n    const [isConnectingError, setIsConnectingError] = useState(false);\n    const [isConnectingErrorMessage, setIsConnectingErrorMessage] = useState('');\n    const [isConnectingErrorCode, setIsConnectingErrorCode] = useState('');\n    const [isConnectingErrorData, setIsConnectingErrorData] = useState('');\n    \n    const connectWallet = async () => {\n      console.log('connect wallet');\n      setIsConnecting(true);\n      setIsConnectingError(false);\n      setIsConnectingErrorMessage('');\n      setIsConnectingErrorCode('');\n      setIsConnectingErrorData('');\n      try {\n        provider.send('eth_requestAccounts', [])\n          .catch(() => console.log('user rejected request'));\n      }\n      catch (error) {\n        console.log('error', error);\n        setIsConnectingError(true);\n        setIsConnectingErrorMessage(error.message);\n        setIsConnectingErrorCode(error.code);\n        setIsConnectingErrorData(error.data);\n      }\n      setIsConnecting(false);\n    };\n\n    const createSiweMessage = (address, statement) => {\n      console.log('address', address);\n      const message = new SiweMessage({\n          domain,\n          address,\n          statement,\n          uri: origin,\n          version: '1',\n          chainId: '1'\n      });\n      return message.prepareMessage();\n    }\n    \n    const signInWithEthereum = async () => {\n      const message = createSiweMessage(\n        await signer.getAddress(),\n        'Sign in with Ethereum to the app.'\n      );\n      console.log(await signer.signMessage(message));\n    };\n\n    return (\n      <>\n        <Button colorScheme=\"teal\" mt={4} onClick={connectWallet}>\n          Connect your wallet\n        </Button>\n        {/* <Button colorScheme=\"teal\" mt={4} onClick={signInWithEthereum}>\n          Sign in with Ethereum\n        </Button> */}\n      </>\n    );\n};\n\nexport default ConnectWalletButton;\n","import Countdown from 'react-countdown';\nimport {\n  HStack,\n  Text,\n  VStack,\n} from '@chakra-ui/react';\n\nconst twoDigits = (n: number) => {\n  return n > 9 ? \"\" + n: \"0\" + n;\n}\n\n\ninterface BlockProps {\n  value: string;\n  label: string;\n}\nconst Block = ({ value, label }: BlockProps) => {\n  return (\n    <VStack alignItems=\"start\">\n      <Text fontSize={20} fontWeight={500}>\n        {value}\n      </Text>\n      <Text fontSize={15} fontWeight={400}>\n        {label}\n      </Text>\n    </VStack>\n  )\n}\ninterface TimeLeftProps {\n  date: number\n}\nconst TimeLeft = ({ date }: TimeLeftProps) => {\n  return (\n    <Countdown\n      date={date}\n      renderer={({ days, hours, minutes, seconds }) => (\n        <>\n          <HStack spacing={{ base: 6, md: 8, lg: 10, xl: 12 }} mt={6}>\n            <Block value={twoDigits(days)} label=\"Days\" />\n            <Block value={twoDigits(hours)} label=\"Hours\" />\n            <Block value={twoDigits(minutes)} label=\"Minutes\" />\n            <Block value={twoDigits(seconds)} label=\"Seconds\" />\n          </HStack>\n          {/* {twoDigits(days)}:{twoDigits(hours)}:{twoDigits(minutes)}:{twoDigits(seconds)} */}\n        </>\n      )}\n    />\n  );\n}\n\nexport default TimeLeft;\n","import { Box, DarkMode, Text } from \"@chakra-ui/react\";\n\ninterface NFTViewerProps {\n  title: string;\n  postedBy: string;\n  startDate: Date;\n  endDate: Date;\n  prizeAmount: string;\n}\nconst NFTViewer = ({\n  title,\n  postedBy,\n  startDate,\n  endDate,\n  prizeAmount,\n}: NFTViewerProps) => {\n  console.log('in NFTViewer prizeAmo  ', prizeAmount);\n  return (\n    <DarkMode>\n      <Box height=\"100%\" bg=\"black\" p={4}>\n        <Text><b>Title:</b> {title}</Text>\n        <Text><b>Posted by:</b> {postedBy}</Text>\n        <Text><b>Start Date:</b> {startDate.toUTCString()}</Text>\n        <Text><b>End Date:</b> {endDate.toUTCString()}</Text>\n        <Text><b>Prize amount:</b> {prizeAmount}</Text>\n      </Box>\n    </DarkMode>\n  );\n}\n\nexport default NFTViewer;\n","import {\n  Box,\n  Text,\n  Heading,\n  VStack,\n  Flex,\n  Divider,\n  HStack,\n  useStyleConfig,\n} from '@chakra-ui/react';\nimport { FaEthereum } from 'react-icons/fa';\nimport BorderedBox from '../../../atoms/BorderedBox';\nimport ClaimButton from '../../../atoms/ClaimButton';\nimport ConnectWalletButton from '../../../atoms/ConnectWalletButton';\nimport TimeLeft from '../../../molecules/TimeLeft';\nimport NFTViewer from '../NFTViewer.tsx';\n\n// const data = {\n//   title: 'Ultra Create an original Ultra Sound Money meme. Money',\n//   postedBy: 'kylekaplan.eth',\n//   startDate: 'January 7th, 2022',\n//   endDate: 'January 14th, 2022',\n//   prizeAmount: '0.01 ETH',\n// };\n\ninterface TopFoldProps {\n  id: string;\n  title: string;\n  postedBy: string;\n  startDate: Date;\n  endDate: Date;\n  prizeAmount: string;\n  isWinnerSelected: boolean;\n}\nconst TopFold = ({\n  id,\n  title,\n  postedBy,\n  startDate,\n  endDate,\n  prizeAmount,\n  isWinnerSelected,\n}: TopFoldProps) => {\n  // const endDate = new Date('Febuary 20, 2022 12:00:00');\n  return (\n    <Flex>\n      {/* NFT Viewer on large screens */}\n      <Box display={{ base: 'none', md: 'block' }}>\n        <NFTViewer\n          title={title}\n          postedBy={postedBy}\n          startDate={startDate}\n          endDate={endDate}\n          prizeAmount={prizeAmount}\n        />\n      </Box>\n      <Box ml={{ base: 0, md: 30 }}>\n        <VStack align=\"start\" spacing={5}>\n          <Heading\n            fontSize=\"4xl\"\n            fontWeight=\"bold\"\n            fontFamily=\"'Work Sans', sans-serif;\"\n          >\n            {title}\n          </Heading>\n          {/* NFT Viewer on small screens */}\n          <Box width=\"100%\" display={{ base: 'block', md: 'none' }}>\n            <NFTViewer\n              title={title}\n              postedBy={postedBy}\n              startDate={startDate}\n              endDate={endDate}\n              prizeAmount={prizeAmount}\n            />\n          </Box>\n          <Text\n            fontSize=\"md\"\n            fontFamily=\"'Poppins', sans-serif\"\n          >\n            By: <Text as=\"span\" sx={useStyleConfig('Text', { variant: 'teal' })}>{postedBy}</Text>\n          </Text>\n        </VStack>\n        <BorderedBox\n          mt={8}\n          fontFamily=\"'Poppins', sans-serif\"\n        >\n          <Box p=\"20px\">\n            <Text fontSize={16}>\n              Challenge ends {endDate.toLocaleString('default', { month: 'long', day: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit', timeZone: 'EST' })} EST.\n            </Text>\n            <TimeLeft date={endDate.getTime()} />\n          </Box>\n          <Divider />\n          <Box\n            p={30}\n            sx={useStyleConfig('Background')}\n            borderBottomRadius={8}\n          >\n            <Text>\n              Prize:\n            </Text>\n            <HStack fontSize=\"30px\">\n              <FaEthereum />\n              <Text>{prizeAmount}</Text>\n            </HStack>\n            {isWinnerSelected\n              ? <ClaimButton bountyId={id} />\n              : <ConnectWalletButton />\n            }\n          </Box>\n        </BorderedBox>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default TopFold;\n","import {\n  Box,\n  Image,\n} from \"@chakra-ui/react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport ReactTimeAgo from 'react-time-ago'\nimport './styles.css';\n\nconst property = {\n  imageUrl: 'https://picsum.photos/200',\n  imageAlt: 'hi',\n  date: '2 days ago',\n  by: '0x058092380943284938402394849038420',\n}\n\ninterface CardProps {\n  files: { src: string }[];\n  imageAlt: string;\n  date: Date;\n  postedBy: string;\n}\nconst Card = ({\n  files,\n  imageAlt,\n  date,\n  postedBy,\n}: CardProps) => {\n  return (\n    <Box maxW='2xl' borderWidth='1px' borderRadius='lg' overflow=\"hidden\">\n      {!(files.length > 1) // not greater than 1\n        ? <Image src={files[0]?.src} alt={imageAlt} />\n        : (\n          <Carousel>\n            {files.map((file, index) => (\n                <div key={file?.src} >\n                  <Image src={file.src} />\n                </div>\n            ))}\n          </Carousel>\n        )\n      }\n      <Box p='6'>\n        <Box display='flex' alignItems='baseline'>\n          <Box\n            color='gray.500'\n            fontWeight='semibold'\n            letterSpacing='wide'\n            fontSize='xs'\n          >\n            {/* {date.toUTCString()} */}\n            <ReactTimeAgo date={date} locale=\"en-US\"/>\n          </Box>\n        </Box>\n\n        <Box\n          mt='1'\n          fontWeight='semibold'\n          as='h4'\n          lineHeight='tight'\n          isTruncated\n        >\n          By: {postedBy}\n        </Box>\n        {/* <Box display='flex' mt='2' alignItems='center'>\n          <Box color='yellow.400' mr='2'>5 stars</Box>\n          <Box as='span' ml='2' color='gray.600' fontSize='sm'>\n            {reviewCount} reviews\n          </Box>\n        </Box> */}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Card;","import {\n  Box,\n  Wrap,\n  WrapItem,\n} from \"@chakra-ui/react\"\nimport { Key, useEffect, useState } from \"react\";\nimport { doc, getDocs, collection, DocumentData } from \"firebase/firestore\";\nimport { useParams } from \"react-router-dom\";\nimport { useDb } from \"../../hooks/useFirebase\";\nimport AccordionDataDisplay from \"../../molecules/AccordionDataDisplay\";\nimport Card from \"./Card\"\n\nconst submissions = [\n  {\n    id: 1,\n    imageAlt: 'hi',\n    date: '2 days ago',\n    postedBy: 'vitalik.eth',\n    files: [\n      // {\n      //   src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      // },\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      }\n    ],\n  },\n  {\n    imageAlt: 'hi',\n    date: '2 days ago',\n    postedBy: 'vitalik.eth',\n    files: [\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      },\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      }\n    ],\n  },\n  {\n    id: 3,\n    imageAlt: 'hi',\n    date: '2 days ago',\n    postedBy: 'vitalik.eth',\n    files: [\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      },\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      }\n    ],\n  },\n  {\n    id: 4,\n    imageAlt: 'hi',\n    date: '2 days ago',\n    postedBy: 'vitalik.eth',\n    files: [\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      },\n      {\n        src: 'https://cdn.vox-cdn.com/thumbor/2q97YCXcLOlkoR2jKKEMQ-wkG9k=/0x0:900x500/1200x800/filters:focal(378x178:522x322)/cdn.vox-cdn.com/uploads/chorus_image/image/49493993/this-is-fine.0.jpg'\n      }\n    ],\n  },\n];\n\n\nconst DisplaySubmissions = () => {\n  const db = useDb()\n  let { id } = useParams();\n  const [fireData, setFireData] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  \n  const getData = async () => {\n    if (typeof id === 'string' && db) {\n      // const docRef = doc(db, \"bounties\", id);\n      // const docSnap = await getDoc(docRef);\n      const docRef = doc(db, \"bounties\", id);\n      const querySnapshot = await getDocs(collection(docRef, \"submissions\"));\n\n      if (querySnapshot) {\n        let tmp: DocumentData[] = []\n        querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          tmp.push(doc.data());\n        });\n        setFireData(tmp);\n        setLoading(false);\n      } else {\n        console.log(\"No such querySnapshot!\");\n        setLoading(false);\n      }\n    } else {\n      console.log('id is not a string');\n    }\n  };\n\n  useEffect(() => {\n    getData()\n  }, [id, db]);\n\n  return (\n    <Box>\n      <AccordionDataDisplay title=\"Open Source Memes:\">\n        {!loading && fireData.length === 0 && <p>No submittions yet. Be the first!</p>}\n        {!loading && fireData\n          ? (\n            <Wrap spacing={5} mt={3} mb={3}>\n              {fireData.map((submission: { id: Key | null | undefined; files: { src: string; }[]; imageAlt: string; date: { seconds: number; }; postedBy: string; }) => (\n                <WrapItem\n                  w={{\n                    base: \"100%\",\n                    md: \"Calc(50% - 20px)\", // 50% of space minus the 5px of spacing\n                    lg: \"Calc(33% - 20px)\", // 33% of space minus the 5px of spacing\n                    xl: \"Calc(25% - 20px)\", // 25% of space minus the 5px of spacing\n                  }}\n                >\n                  <Card\n                    key={submission.id}\n                    files={submission.files}\n                    imageAlt={submission.imageAlt}\n                    date={new Date(submission.date.seconds * 1000)}\n                    postedBy={submission.postedBy}\n                  />\n                </WrapItem>\n              ))}\n          </Wrap>\n          )\n          : (\n            <Box>\n              <h1>Loading...</h1>\n            </Box>\n          )}\n      </AccordionDataDisplay>\n    </Box>\n  );\n};\n\nexport default DisplaySubmissions;\n","import { Box } from '@chakra-ui/react';\nimport { useParams } from 'react-router-dom';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport './challenge.css';\nimport Uploader from './Uploader';\nimport Footer from '../../organsims/Footer';\nimport Description from './Accordions/Description';\nimport ExampleImages from './Accordions/ExampleImages';\nimport TopFold from './TopFolder';\nimport DisplaySubmissions from '../../organsims/DisplaySubmissions';\nimport { useEffect, useState } from 'react';\nimport { useDb } from '../../hooks/useFirebase';\n\n\nconst MyDivider = () => (\n  <Box height={30} />\n);\n\ninterface ChallengeProps {};\nconst Challenge = ({}: ChallengeProps) => {\n  const db = useDb();\n  let { id } = useParams();\n  const [fireData, setFireData] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSubmission, setLoadingSubmission] = useState<boolean>(false);\n\n  const getData = async () => {\n    console.log('type of id:', typeof id);\n    if (typeof id === 'string' && db) {\n      const docRef = doc(db, \"bounties\", id);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        console.log(\"Document data:\", docSnap.data());\n        setFireData({ ...docSnap.data() });\n        setLoading(false);\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n        setLoading(false);\n      }\n    } else {\n      console.log('id is not a string');\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [id, db]);\n\n  if (loading || !id) {\n    return null;\n  };\n\n  const endDate = new Date(fireData.endDate.seconds * 1000);\n  const startDate = new Date(fireData.startDate.seconds * 1000);\n  console.log('fireData:', fireData);\n  const {\n    title,\n    postedBy,\n    prizeAmount,\n    description,\n    examplesImages,\n    winner,\n  } = fireData;\n  console.log('postedBy:', postedBy);\n  return (\n    <Box\n      m=\"0 auto\"\n      padding={{ base: \"30px 5px\", md: \"30px 40px\", lg: \"30px 60px\", xl: \"30px 80px\" }}\n      maxWidth=\"1600px\"\n    >\n      <TopFold\n        id={id}\n        title={title}\n        postedBy={postedBy}\n        startDate={startDate}\n        endDate={endDate}\n        prizeAmount={prizeAmount.amount}\n        isWinnerSelected={winner}\n      />\n      <MyDivider />\n      {description && <Description description={description} />}\n      <MyDivider />\n      {examplesImages && (\n        <>\n          <ExampleImages imgs={examplesImages} />\n          <Box height={{ base: 10, md: 30, lg: 75 }} />\n        </>\n      )}\n      <Uploader bountyId={id} refreshData={getData} setLoading={setLoadingSubmission} />\n      <MyDivider />\n      {!loadingSubmission && <DisplaySubmissions />}\n      <Footer />\n    </Box>\n  );\n}\n\nexport default Challenge;\n","export default __webpack_public_path__ + \"static/media/much_wow.8624a0da.jpeg\";","import { useEffect } from 'react';\nimport {\n  Box,\n  Text,\n  Button,\n  VStack,\n  Stack,\n  Heading,\n  Icon,\n  Image,\n} from \"@chakra-ui/react\";\nimport Parallax from 'parallax-js'\nimport {\n  Link\n} from 'react-router-dom';\nimport { AiOutlineArrowRight } from 'react-icons/ai';\nimport './home.css';\nimport muchWow from '../../assets/images/much_wow.jpeg';\n\nconst Home = () => {\n\n  useEffect(() => {\n    var scene = document.getElementById('scene');\n    new Parallax(scene, {\n      relativeInput: true\n    });    \n  }, []);\n\n  return (\n    <>\n    {/* Parallax background image */}\n    <Box\n      id=\"scene\"\n      data-relative-input=\"true\"\n      position=\"absolute\"\n      top=\"0\"\n      bottom=\"0\"\n      right=\"0\"\n      left=\"0\"\n    >\n      <Box\n        minH=\"90vh\"\n        data-depth=\"0.2\"\n        className='background5'\n      />\n    </Box>\n    {/* Start of regular content */}\n    <Box>\n      <VStack\n        spacing={3}\n        minH=\"66vh\"\n        textAlign=\"center\"\n        justifyContent=\"center\"\n      >\n        <Heading\n          fontSize='6xl'\n          fontWeight='extrabold'\n          // fontFamily='\"Baloo Bhaijaan 2\"'\n          className='headerText'\n        >\n          Earn Crypto by Making Memes\n        </Heading>\n        <Text\n          color='gray.350'\n          fontSize=\"3xl\"\n        >\n          The best meme wins. All memes are open source.\n        </Text>\n        <Stack direction='row' spacing={4} style={{ marginTop: '30px' }}>\n          <Link to=\"/challenge/OVyNZQZY8WqDKF7bdP6Z\">\n            <Button\n              rightIcon={<Icon as={AiOutlineArrowRight} />}\n              // colorScheme=\"#48BB78\"\n              colorScheme=\"teal\"\n              // color='white'\n              // bgGradient=\"linear-gradient(163.91deg,#944af2 18.37%,#448fff 82.04%)\"\n              variant='solid'\n              size=\"lg\"\n              height='56px'\n              className=\"ctaButton\"\n            >\n              Get Started\n            </Button>\n          </Link>\n        </Stack>\n        <Image\n          src={muchWow}\n          className=\"dogeImg\"\n          alt=\"Doge meme\"\n          width={{ base: 290, sm: 290, md: 290, lg: 333, xl: 333 }}\n        />\n      </VStack>\n      <VStack\n        minH={{ base: '35vh', sm: \"35vh\", md: \"23vh\", lg: \"23vh\", xl: \"23vh\" }}\n      />\n    </Box>\n    </>\n  );\n}\n\nexport default Home;\n","import {\n  Box,\n} from '@chakra-ui/react';\n\nconst NotFound = () => {\n  return (\n    <Box>\n      Page not found.\n    </Box>\n  )\n}\n\nexport default NotFound;\n","import {\n  Box,\n  Heading,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Input,\n  Textarea,\n  VStack,\n  useColorMode,\n  Grid,\n  GridItem,\n  NumberInput,\n  NumberInputField,\n  HStack,\n  Button,\n  useToast,\n} from '@chakra-ui/react'\nimport { useNavigate } from \"react-router-dom\";\nimport UUID from \"node-uuid\";\nimport { ethers } from 'ethers';\nimport { useContext, useState } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport { FaEthereum } from 'react-icons/fa';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport StoreContext from '../../store/Store/StoreContext';\nimport styles from './styles.module.css';\nimport Uploader from './Uploader';\nimport { useDb } from '../../hooks/useFirebase';\n\nconst Create = () => {\n  const db = useDb();\n  const toast = useToast();\n  let navigate = useNavigate();\n  const { colorMode } = useColorMode();\n  const [appState] = useContext(StoreContext);\n  const [startDate, setStartDate] = useState<Date | null>(new Date());\n  const [endDate, setEndDate] = useState<Date | null>(null);\n  const [title, setTitle] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [prizeAmount, setPrizeAmount] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [files, setFiles] = useState<any>([]);\n\n  const [titleInvalid, setTitleInvalid] = useState<boolean>(false);\n  const [startDateInvalid, setStartDateInvalid] = useState<boolean>(false);\n  const [endDateInvalid, setEndDateInvalid] = useState<boolean>(false);\n  const [prizeAmountInvalid, setPrizeAmountInvalid] = useState<boolean>(false);\n\n  const handleChangeStatus = (props: { meta: { id: any; }; }, status: string) => {\n    if (status === 'done') {\n      setFiles((prevFiles: any) => [...prevFiles, props]);\n    } else if (status === 'removed') {\n      const newFiles = files.filter((file: any) => file.meta.id !== props.meta.id);\n      setFiles([...newFiles]);\n    }\n  }\n\n  // Methods\n  function sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  const [token, setToken] = useState(appState.tokens[0]);\n  const [transactionHash, setTransactionHash] = useState(null);\n\n  async function fundBounty(bountyAddress: any) {\n    console.log('in fundBounty');\n    console.log('bountyAddress:', bountyAddress);\n    // setIsLoading(true);\n    console.log('parseFloat(prizeAmount):', parseFloat(prizeAmount));\n    console.log('token:', token);\n    const volumeInWei = +prizeAmount * 10 ** token.decimals;\n\n    if (volumeInWei == 0) {\n      // setError({ title: 'Zero Volume Sent', message: 'Must send a greater than 0 volume of tokens.' });\n      // setIsLoading(false);\n      return;\n    }\n\n    const bigNumberVolumeInWei = ethers.BigNumber.from(volumeInWei.toString());\n    console.log('bigNumberVolumeInWei:', bigNumberVolumeInWei);\n\n    let approveSucceeded = false;\n\n    try {\n      const callerBalance = await appState.client.balanceOf('library', 'account', token.address);\n\n      console.log('callerBalance:', callerBalance);\n\n      if (callerBalance < bigNumberVolumeInWei) {\n        console.log('Funds Too Low');\n        const title = 'Funds Too Low';\n        const message = 'You do not have sufficient funds for this deposit';\n        // setError({ message, title });\n        // setIsLoading(false);\n        // setShowErrorModal(true);\n        return;\n      }\n    } catch (error) {\n      console.log('hey error:');\n      console.log(error);\n      const title = 'Error';\n      const message = 'A contract call exception occurred';\n      // setError({ message, title });\n      // setIsLoading(false);\n      // setShowErrorModal(true);\n      return;\n    }\n\n    try {\n      if (token.address != ethers.constants.AddressZero) {\n        await appState.client.approve(\n          'library',\n          bountyAddress,\n          token.address,\n          bigNumberVolumeInWei\n        );\n      }\n      approveSucceeded = true;\n    } catch (error) {\n      console.log('yo error:');\n      const { message, title } = appState.client.handleError(error, { bountyAddress });\n      console.log('message:', message);\n      console.log('title:', title);\n      // setError({ message, title });\n      // setIsLoading(false);\n      // setShowErrorModal(true);\n    }\n\n    console.log('approveSucceeded:', approveSucceeded);\n\n    if (approveSucceeded) {\n      try {\n        const fundTxnReceipt = await appState.client.fundBounty(\n          'library',\n          bountyAddress,\n          token.address,\n          bigNumberVolumeInWei\n        );\n        console.log('fundTxnReceipt:', fundTxnReceipt);\n        setTransactionHash(fundTxnReceipt.transactionHash);\n        console.log(`Successfully funded issue ${bountyAddress} with ${prizeAmount} ${token.symbol}!`);\n        // setSuccessMessage(\n        // \t`Successfully funded issue ${bountyAddress} with ${volume} ${token.symbol}!`\n        // );\n        // setShowSuccessModal(true);\n        // refreshBounty();\n        // setIsLoading(false);\n        return fundTxnReceipt;\n      } catch (error) {\n        console.log('hi error:', error);\n        const { message, title } = appState.client.handleError(error, { bountyAddress });\n        // setError({ message, title });\n        // setIsLoading(false);\n        // setShowErrorModal(true);\n      }\n    }\n  }\n\n  // console.log('library', library);\n  async function mintBounty(uuid: string) {\n    console.log('minting bounty');\n    try {\n      // setMintBountyState(TRANSACTION_PENDING());\n\n      // console.log('library', library);\n      const { bountyAddress } = await appState.client.mintBounty(\n        'library',\n        uuid, // mintBountyState.issueId,\n        'randomOrgName', // mintBountyState.orgName\n      );\n\n      console.log('bountyAddress:', bountyAddress);\n\n      // const from = txnResponse.from;\n      // const nonce = txnResponse.nonce;\n\n      // const realAddress = ethers.utils.getContractAddress({ from, nonce });\n\n      // console.log('realAddress:', realAddress);\n\n      // await fundBounty(realAddress);\n\n      // let bountyId = null;\n      // while (bountyId == 'undefined') {\n      // \tconst bountyResp = await appState.openQSubgraphClient.getBounty(bountyAddress);\n      // \tbountyId = bountyResp?.bountyId;\n      // \tconsole.log('bountyId', bountyId);\n      // \tawait sleep(500);\n      // }\n\n      // await sleep(1000);\n\n      console.log('done')\n      return bountyAddress;\n\n      // router.push(\n      // \t`${process.env.NEXT_PUBLIC_BASE_URL}/bounty/${bountyAddress}`\n      // );\n    } catch (error) {\n      console.log('error in mintboutny', error);\n      const { message, title } = appState.client.handleError(error);\n      console.log('message', message);\n      console.log('title', title);\n      // setMintBountyState(TRANSACTION_FAILURE({ message, title }));\n    }\n  }\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    setLoading(true);\n    const uuid = UUID.v4();\n    setTitleInvalid(false);\n    setStartDateInvalid(false);\n    setEndDateInvalid(false);\n    setPrizeAmountInvalid(false);\n    console.log('endDate', endDate);\n    if (title === '' || !startDate || !endDate || !prizeAmount || prizeAmount === '0') {\n      setLoading(false);\n    }\n    if (title === '') {\n      setTitleInvalid(true);\n      return;\n    }\n    if (!startDate) {\n      setStartDateInvalid(true);\n      return;\n    }\n    if (!endDate) {\n      setEndDateInvalid(true);\n      return;\n    }\n    if (!prizeAmount || prizeAmount === '0') {\n      setPrizeAmountInvalid(true);\n      return;\n    }\n    if (startDate && endDate && startDate > endDate) {\n      setStartDateInvalid(true);\n    }\n    console.log('files', files);\n    // TODO: wrap mint bounty in try/catch\n    const bountyAddress = await mintBounty(uuid);\n    const fundTxnReceipt = await fundBounty(bountyAddress);\n    // upload to firebase\n    console.log('uploading to firebase');\n    try {\n      if (db) {\n        await setDoc(doc(db, \"bounties\", uuid), {\n          id: uuid,\n          title,\n          description,\n          prizeAmount: { amount: parseInt(prizeAmount), contract: token.address },\n          startDate,\n          endDate,\n          exampleImages: files,\n          postedBy: fundTxnReceipt.from,\n        });\n      } else { console.log('error no db') }\n    } catch (error) {\n      console.log('error uploading to firebase', error);\n    }\n\n    // await sleep(1000);\n    console.log('finished submtting');\n    setLoading(false);\n    navigate(`/challenge/${uuid}`);\n    toast({\n      title: 'Challenge Created.',\n      description: \"You challenge has been created successfully!\",\n      status: 'success',\n      duration: 9000,\n      isClosable: true,\n    })\n  };\n\n  // const from = \"0x04E7831739bA350b17E36541148368f8541552d6\";\n  // const from = '0xe5b2c677a667972a8bc48d2de6835dd0e1f4f1ff';\n  // const from = '0x5F1c306C70FEE9bD34ED91d862Dc1BA6E268CCBD';\n  // const nonce = 18;\n\n  // const realAddress = ethers.utils.getContractAddress({ from, nonce });\n\n  // console.log('realAddress:', realAddress);\n\n  return (\n    <Box\n      m=\"0 auto\"\n      padding={{ base: \"30px 5px\", md: \"30px 40px\", lg: \"30px 60px\", xl: \"30px 80px\" }}\n      maxWidth=\"1600px\"\n    >\n      <Heading as=\"h1\" size=\"xl\">\n        Create a Challenge\n      </Heading>\n      <VStack spacing={8}>\n        <FormControl mt={45} isRequired isInvalid={titleInvalid}>\n          <FormLabel>Title:</FormLabel>\n          <Input\n            id='title'\n            placeholder='Good titles are short and sweet'\n            value={title}\n            onChange={(e: any) => setTitle(e.target.value)}\n          />\n          {titleInvalid && (\n            <FormErrorMessage>Title is required.</FormErrorMessage>\n          )}\n        </FormControl>\n\n        <FormControl>\n          <FormLabel>Description:</FormLabel>\n          <Textarea\n            id='description'\n            placeholder='Describe the details of your challenge'\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </FormControl>\n\n        <FormControl>\n          <FormLabel>Good Example images:</FormLabel>\n          <Uploader handleChangeStatus={handleChangeStatus} />\n        </FormControl>\n\n        <Grid\n          gap={10}\n          templateColumns='repeat(2, 1fr)'\n          alignSelf=\"flex-start\"\n        >\n          <GridItem colSpan={{ base: 2, md: 1 }}>\n            <FormControl isRequired isInvalid={startDateInvalid}>\n              <FormLabel>Start Date:</FormLabel>\n              <DatePicker\n                showTimeSelect\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                dateFormat=\"MMMM d, yyyy h:mm aa z\"\n                className={colorMode === 'dark' ? styles.darkTheme : styles.lightTheme}\n                minDate={new Date()} // limit to right now\n                maxDate={new Date(new Date().setDate(new Date().getDate() + 365))} // limit to 1 year from now\n              />\n              {startDateInvalid && (\n                <FormErrorMessage>Start date is required and must be before end date.</FormErrorMessage>\n              )}\n            </FormControl>\n          </GridItem>\n\n          <GridItem colSpan={{ base: 2, md: 1 }}>\n            <FormControl isRequired isInvalid={endDateInvalid}>\n              <FormLabel>End Date:</FormLabel>\n              <DatePicker\n                showTimeSelect\n                selected={endDate}\n                onChange={(date) => setEndDate(date)}\n                dateFormat=\"MMMM d, yyyy h:mm aa z\"\n                className={colorMode === 'dark' ? styles.darkTheme : styles.lightTheme}\n                minDate={startDate} // limit to after start date\n                maxDate={new Date(new Date().setDate(new Date().getDate() + 14))} // limit to 2 weeks from now\n              />\n              {endDateInvalid && (\n                <FormErrorMessage>End date is required.</FormErrorMessage>\n              )}\n            </FormControl>\n          </GridItem>\n        </Grid>\n\n        <FormControl isRequired isInvalid={prizeAmountInvalid}>\n          <FormLabel>Prize Amount:</FormLabel>\n          <NumberInput\n            id=\"amount\"\n            maxW={280}\n            min={0}\n            value={prizeAmount}\n            onChange={(valueString) => setPrizeAmount(valueString)}\n          >\n            <HStack>\n              <FaEthereum />\n              <NumberInputField />\n            </HStack>\n          </NumberInput>\n          {!prizeAmountInvalid ? (\n            <FormHelperText ml={7}>Amount is denominated in ETH.</FormHelperText>\n          ) : (\n            <FormErrorMessage>Prize amount is required.</FormErrorMessage>\n          )}\n        </FormControl>\n\n        <Button\n          size=\"lg\"\n          mt={3}\n          colorScheme='teal'\n          // alignSelf=\"flex-start\"\n          isLoading={loading}\n          disabled={loading}\n          type='submit'\n          onClick={handleSubmit}\n        >\n          Create Challenge\n        </Button>\n\n      </VStack>\n    </Box>\n  )\n};\n\nexport default Create;\n","import { Key, useContext, useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  Wrap,\n  WrapItem,\n} from '@chakra-ui/react';\nimport { doc, updateDoc, getDocs, collection, DocumentData } from \"firebase/firestore\";\nimport { useParams } from 'react-router-dom';\nimport { useDb } from '../../hooks/useFirebase';\nimport Card from '../../organsims/DisplaySubmissions/Card';\nimport StoreContext from '../../store/Store/StoreContext';\nimport { ethers } from 'ethers';\n\nconst SelectWinner = () => {\n  const db = useDb();\n  let { id } = useParams();\n  const [appState] = useContext(StoreContext);\n\n  const [fireData, setFireData] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const [selected, setSelected] = useState<string>('');\n  const [loadingWinner, setLoadingWinner] = useState<boolean>(false);\n  const [winnerHasBeenSelected, setWinnerHasBeenSelected] = useState<boolean>(false);\n\n  const getData = async () => {\n    if (typeof id === 'string' && db) {\n      // const docRef = doc(db, \"bounties\", id);\n      // const docSnap = await getDoc(docRef);\n      const docRef = doc(db, \"bounties\", id);\n      const querySnapshot = await getDocs(collection(docRef, \"submissions\"));\n\n      if (querySnapshot) {\n        let tmp: DocumentData[] = []\n        querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          tmp.push(doc.data());\n        });\n        setFireData(tmp);\n        setWinnerHasBeenSelected(tmp.filter((item) => item.winner).length > 0);\n        setLoading(false);\n      } else {\n        console.log(\"No such querySnapshot!\");\n        setLoading(false);\n      }\n    } else {\n      console.log('id is not a string');\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [id, db]);\n\n  if (loading || !fireData) {\n    return null;\n  };\n\n  \n  const handleSubmit = async () => {\n    console.log('handleSubmit');\n    setLoadingWinner(true);\n    if (db && id) {\n      const { txnResponse, txnReceipt } = await appState.client.selectWinner(selected, id);\n      console.log('txnResponse:', txnResponse);\n      console.log('txnReceipt:', txnReceipt);\n      // Upload to firebase\n      const submissionRef = doc(db, \"bounties\", id, \"submissions\", selected);\n      updateDoc(submissionRef, {\n        winner: true,\n      });\n      const bountyRef = doc(db, \"bounties\", id);\n      updateDoc(bountyRef, {\n        winner: submissionRef,\n        winnerSelected: new Date(),\n      });\n    }\n    setLoadingWinner(false);\n  };\n  \n  const handleSelect = (id: any) => {\n    if (selected === id) {\n      setSelected('');\n    } else {\n      setSelected(id);\n    }\n  }\n\n  return (\n    <Box\n      m=\"0 auto\"\n      padding={{ base: \"30px 5px\", md: \"30px 40px\", lg: \"30px 60px\", xl: \"30px 80px\" }}\n      maxWidth=\"1600px\"\n    >\n      <Heading>Select Winner:</Heading>\n      <Box height={30} />\n      <Wrap spacing={5} mt={3} mb={3}>\n        {fireData.map((submission: any) => (\n          <WrapItem\n            onClick={() => handleSelect(submission.id ? submission.id : '')}\n            w={{\n              base: \"100%\",\n              md: \"Calc(50% - 20px)\", // 50% of space minus the 5px of spacing\n              lg: \"Calc(33% - 20px)\", // 33% of space minus the 5px of spacing\n              xl: \"Calc(25% - 20px)\", // 25% of space minus the 5px of spacing\n            }}\n            borderColor={(selected === submission.id || submission.winner) ? 'teal.500' : 'transparent'}\n            borderWidth={(selected === submission.id || submission.winner) ? '3px' : '0px'}\n            borderRadius={8}\n          >\n            <Card\n              key={submission.id}\n              files={submission.files}\n              imageAlt={submission.imageAlt}\n              date={new Date(submission.date.seconds * 1000)}\n              postedBy={submission.postedBy}\n            />\n          </WrapItem>\n        ))}\n      </Wrap>\n      <Box height={10} />\n      {selected !== '' && !fireData.winner && (\n        <Button\n          size='lg'\n          colorScheme=\"teal\"\n          onClick={() => {\n            handleSubmit();\n          }}\n          isLoading={loadingWinner}\n          disabled={loadingWinner}\n        >\n          Submit\n        </Button>\n      )}\n    </Box>\n  )\n};\n\nexport default SelectWinner;\n","import {\n  ChakraProvider,\n  extendTheme,\n  ThemeConfig,\n  Box,\n  Flex,\n} from '@chakra-ui/react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n} from 'react-router-dom'\nimport { initializeApp } from 'firebase/app';\n// import { getFirestore } from \"firebase/firestore\"\nimport 'photoswipe/dist/photoswipe.css'\nimport 'photoswipe/dist/default-skin/default-skin.css'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './app.css';\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\nimport StoreProvider from './store/Store/StoreProvider';\nimport Challenge from \"./pages/Challenge\";\nimport Home from \"./pages/Home\"\nimport NotFound from \"./pages/NotFound\";\nimport Create from './pages/Create';\nimport SelectWinner from './pages/SelectWinner';\n\n\nconst colors = {\n  // brand: {\n  //   900: '#1a365d',\n  //   800: '#153e75',\n  //   700: '#2a69ac',\n  // }\n}\n\n// 2. Add your color mode config\nconst config: ThemeConfig = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false,\n}\n\nconst Border = {\n  variants: {\n    'thin': (props: any) => ({\n      border: '1px solid',\n      borderColor: props.colorMode === 'light' ? 'gray.200' : 'whiteAlpha.300',\n      borderRadius: '8px',\n    }),\n    'thick': (props: any) => ({\n      border: '4px solid',\n      borderColor: props.colorMode === 'light' ? 'gray.200' : 'whiteAlpha.300',\n      borderRadius: '8px',\n    }),\n  },\n  // The default variant value\n  defaultProps: {\n    variant: 'thin',\n  },\n}\n\nconst Text = {\n  variants: {\n    'blackAndWhite': (props: any) => ({\n      color: props.colorMode === 'light' ? 'gray.800' : 'whiteAlpha.800',\n    }),\n    'teal': (props: any) => ({\n      color: props.colorMode === 'light' ? 'teal.500' : 'teal.200',\n    }),\n  },\n  // The default variant value\n  defaultProps: {\n    variant: 'blackAndWhite',\n  },\n}\n\nconst Background = {\n  variants: {\n    'shade': (props: any) => ({\n      backgroundColor: props.colorMode === 'light' ? 'gray.100' : 'whiteAlpha.100',\n    }),\n  },\n  // The default variant value\n  defaultProps: {\n    variant: 'shade',\n  },\n}\n\nconst components = {\n  Border,\n  Text,\n  Background,\n}\n\nconst theme = extendTheme({ config, colors, components })\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  projectId: \"meme-to-earn\",\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n};\n// // Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n// const db = getFirestore();\n\nexport const App = () => (\n  <StoreProvider>\n    <ChakraProvider theme={theme}>\n      <Router basename=\"/open-work\" >\n        <Box p={3}>\n          <Flex justify=\"end\">\n            <ColorModeSwitcher />\n          </Flex>\n          <Routes>\n            <Route path=\"/\" element={<Home/>}/>\n            <Route path=\"/challenge/:id\" element={<Challenge />}/>\n            <Route path=\"/challenge/:id/select-winner\" element={<SelectWinner />}/>\n            <Route path=\"/create\" element={<Create />}/>\n            <Route path=\"*\" element={<NotFound/>}/>\n          </Routes>\n        </Box>\n      </Router>\n    </ChakraProvider>\n  </StoreProvider>\n)\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en.json'\nimport ru from 'javascript-time-ago/locale/ru.json'\nimport { App } from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nTimeAgo.addDefaultLocale(en)\nTimeAgo.addLocale(ru)\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import React from 'react';\nconst StoreContext = React.createContext();\nexport default StoreContext;","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  // databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET\n}\n\nlet instance = null\nlet db = null\n\nexport default function getFirebase() {\n  if (instance) return instance\n  instance = initializeApp(config)\n  return instance\n}\n\nexport function getDb() {\n  if (db) return db\n  db = getFirestore()\n  return db\n}\n","import { useEffect, useState } from \"react\";\nimport getFirebase, { getDb } from \"../services/firebase\";\n\nexport default function useFirebase() {\n  const [instance, setInstance] = useState(false)\n\n  useEffect(() => {\n    setInstance(!!getFirebase())\n  }, [])\n\n  return instance\n}\n\nexport function useDb() {\n  const [db, setDb] = useState(null);\n\n  useEffect(() => {\n    setDb(getDb())\n  }, [])\n  return db\n}\n"],"sourceRoot":""}